move:      .function 
           .param ptr src
           .param ptr dst
           call putstr("Move a disk from the ")  
           call putstr(src)  
           call putstr(" to the ")  
           call putstr(dst)  
           call putstr(".\n")  
           return
           .end
towers:    .function 
           .param int ndisks
           .param ptr src
           .param ptr tmp
           .param ptr dst
.if0:      $t0:i = ndisks < 1
           goto .fi0 if $t0:i
.th0:      return 
.fi0:
           $t1:i = ndisks - 1
           call towers($t1:i,src,dst,tmp)  
           call move(src,dst)  
           $t2:i = ndisks - 1
           call towers($t2:i,tmp,src,dst)  
           return
           .end
main:      .function int 
           .param int argc
           .param ptr argv
           .local int count
.if1:      $t1:i = argc == 2
           $t0:i = not $t1:i  
           goto .fi1 if $t0:i
.th1:      call fail("argc == 2","45-towers-of-hanoi.oc",21)  
.fi1:
           $t4:c = argv[1 * :c]  
           $t3:i = $t4:c[0 * :i]  
           $t2:i = $t3:i - '0'
           count = $t2:i  
.if2:      $t6:i = count > 0
           $t5:i = not $t6:i  
           goto .fi2 if $t5:i
.th2:      call fail("count > 0","45-towers-of-hanoi.oc",23)  
.fi2:
.if3:      $t8:i = count < 9
           $t7:i = not $t8:i  
           goto .fi3 if $t7:i
.th3:      call fail("count < 9","45-towers-of-hanoi.oc",24)  
.fi3:
           $t9:c = argv[0 * :c]  
           call putstr($t9:c)  
           call putstr(": ")  
           call putint(count)  
           call putstr(" disks\n")  
           call towers(count,"source","temporary","distination")  
           return 0
           return
           .end
