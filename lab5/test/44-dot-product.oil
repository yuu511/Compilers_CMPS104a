dot_product: .function int 
           .param int size
           .param ptr vec1
           .param ptr vec2
           .local int index
           .local int dot
           index = 0  
           dot = 0  
.wh0:      goto .od0 if index > size
.do0:      $t2:i = vec1[index * :i]  
           $t3:i = vec2[index * :i]  
           $t1:i = $t2:i * $t3:i
           $t0:i = dot + $t1:i
           dot = $t0:i  
           $t4:i = index + 1
           index = $t4:i  
           goto .wh0  
.od0
           return dot
           return
           .end
main:      .function int 
           .local ptr vec1
           .local ptr vec2
           .local int index
           $t0:p = 10 * sizeof int
           vec1 = call malloc($t0:p)  
           $t1:p = 10 * sizeof int
           vec2 = call malloc($t1:p)  
           index = 0  
.wh1:      goto .od1 if index > 10
.do1:      $t2:i = index + 10
           vec1[index * :i] = $t2:i  
           $t3:i = index * 10
           vec2[index * :i] = $t3:i  
           $t4:i = index + 1
           index = $t4:i  
           goto .wh1  
.od1
           $t5:i = call dot_product(10,vec1,vec2)  
           call putint($t5:i)  
           call putchr('\n')  
           return 0
           return
           .end
