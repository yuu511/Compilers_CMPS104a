strcmp:    .function int 
           .param ptr s1
           .param ptr s2
           .local int index
           .local int contin
           .local int s1c
           .local int s2c
           .local int cmp
           index = 0  
           contin = 1  
           s1c = 0  
           s2c = 0  
           cmp = 0  
.wh0:      $t0:i = contin  
           goto .od0 if not $t0:i
.do0:      $t1:i = s1[index * :i]  
           s1c = $t1:i  
           $t2:i = s2[index * :i]  
           s2c = $t2:i  
           $t3:i = s1c - s2c
           cmp = $t3:i  
.if0:      $t4:i = cmp != 0
           goto .fi0 if not $t4:i
.th0:      return cmp
.fi0:
.if1:      $t5:i = s1c == '\0'
           goto .fi1 if not $t5:i
.th1:      contin = 0  
.fi1:
.if2:      $t6:i = s2c == '\0'
           goto .fi2 if not $t6:i
.th2:      contin = 0  
.fi2:
           $t7:i = index + 1
           index = $t7:i  
           goto .wh0
.od0:
           return 0
           return
           .end
insertion_sort: .function 
           .param int size
           .param ptr words
           .local int sorted
           .local int slot
           .local ptr element
           .local int contin
           sorted = 1  
           slot = 0  
           element = nullptr  
           contin = 0  
.wh1:      $t0:i = sorted < size
           goto .od1 if not $t0:i
.do1:      slot = sorted  
           $t1:c = words[slot * :c]  
           element = $t1:c  
           contin = 1  
.wh2:      $t2:i = contin  
           goto .od2 if not $t2:i
.do2:
.if3:      $t3:i = slot == 0
           goto .el3 if not $t3:i
.th3:      contin = 0  
           goto .fi3
.el3:
.if4:      $t7:i = slot - 1
           $t6:c = words[$t7:i * :c]  
           $t5:i = call strcmp($t6:c,element)  
           $t4:i = $t5:i <= 0
           goto .el4 if not $t4:i
.th4:      contin = 0  
           goto .fi4
.el4:      $t9:i = slot - 1
           $t8:c = words[$t9:i * :c]  
           words[slot * :c] = $t8:c  
           $t10:i = slot - 1
           slot = $t10:i  
.fi4:
.fi3:
           goto .wh2
.od2:
           words[slot * :c] = element  
           $t11:i = sorted + 1
           sorted = $t11:i  
           goto .wh1
.od1:
           return
           .end
print_array: .function 
           .param int size
           .param ptr words
           .local int index
           index = 0  
.wh3:      $t0:i = index < size
           goto .od3 if not $t0:i
.do3:      $t1:c = words[index * :c]  
           call putstr($t1:c)  
           call putchr('\n')  
           $t2:i = index + 1
           index = $t2:i  
           goto .wh3
.od3:
           return
           .end
read_words: .function int 
           .param int size
           .param ptr words
           .local int count
           .local ptr word
           count = 0  
           word = nullptr  
.wh4:      $t0:i = 1  
           goto .od4 if not $t0:i
.do4:
.if5:      $t1:i = count == size
           goto .fi5 if not $t1:i
.th5:      return count
.fi5:
           $t2:p = call getstr()  
           word = $t2:p  
.if6:      $t3:i = word == nullptr
           goto .fi6 if not $t3:i
.th6:      return count
.fi6:
           words[count * :c] = word  
           $t4:i = count + 1
           count = $t4:i  
           goto .wh4
.od4:
           return
           .end
main:      .function int 
           .local int count
           .local ptr words
           count = 100  
           $t0:p = count * sizeof ptr
           words = call malloc($t0:p)  
           $t1:i = call read_words(count,words)  
           count = $t1:i  
           call insertion_sort(count,words)  
           call print_array(count,words)  
           return 0
           return
           .end
