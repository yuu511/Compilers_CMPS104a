==19505== Memcheck, a memory error detector
==19505== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19505== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19505== Command: ./oc ./examples/test.oc
==19505== 
==19505== Invalid read of size 8
==19505==    at 0x120A38: get_stride(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*) (3ac.cpp:113)
==19505==    by 0x121729: asg_int(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (3ac.cpp:263)
==19505==    by 0x121E5B: p_assignment(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (3ac.cpp:320)
==19505==    by 0x121FE7: p_stmt(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (3ac.cpp:338)
==19505==    by 0x12354B: ac_traverse(astree*, all_tables*, _IO_FILE*) (3ac.cpp:520)
==19505==    by 0x1236D9: emit_3ac(astree*, all_tables*, _IO_FILE*) (3ac.cpp:545)
==19505==    by 0x12877F: main (main.cpp:185)
==19505==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==19505== 
==19505== 
==19505== Process terminating with default action of signal 11 (SIGSEGV)
==19505==  Access not within mapped region at address 0x0
==19505==    at 0x120A38: get_stride(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*) (3ac.cpp:113)
==19505==    by 0x121729: asg_int(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (3ac.cpp:263)
==19505==    by 0x121E5B: p_assignment(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (3ac.cpp:320)
==19505==    by 0x121FE7: p_stmt(astree*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, symbol*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const, symbol*> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (3ac.cpp:338)
==19505==    by 0x12354B: ac_traverse(astree*, all_tables*, _IO_FILE*) (3ac.cpp:520)
==19505==    by 0x1236D9: emit_3ac(astree*, all_tables*, _IO_FILE*) (3ac.cpp:545)
==19505==    by 0x12877F: main (main.cpp:185)
==19505==  If you believe this happened as a result of a stack
==19505==  overflow in your program's main thread (unlikely but
==19505==  possible), you can try to increase the size of the
==19505==  main thread stack using the --main-stacksize= flag.
==19505==  The main thread stack size used in this run was 8388608.
==19505== 
==19505== HEAP SUMMARY:
==19505==     in use at exit: 35,269 bytes in 261 blocks
==19505==   total heap usage: 379 allocs, 118 frees, 127,229 bytes allocated
==19505== 
==19505== LEAK SUMMARY:
==19505==    definitely lost: 0 bytes in 0 blocks
==19505==    indirectly lost: 0 bytes in 0 blocks
==19505==      possibly lost: 0 bytes in 0 blocks
==19505==    still reachable: 35,269 bytes in 261 blocks
==19505==         suppressed: 0 bytes in 0 blocks
==19505== Rerun with --leak-check=full to see details of leaked memory
==19505== 
==19505== For counts of detected and suppressed errors, rerun with: -v
==19505== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
