==13453== Memcheck, a memory error detector
==13453== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13453== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==13453== Command: ./cppstrtok foo.oc
==13453== 
command="/usr/bin/cpp -nostdinc foo.oc"
foo.oc:line 1: [# 1 "foo.oc"]
DIRECTIVE: line 1 file "foo.oc"
foo.oc:line 1: [# 1 "<built-in>"]
DIRECTIVE: line 1 file "<built-in>"
foo.oc:line 1: [# 1 "<command-line>"]
DIRECTIVE: line 1 file "<command-line>"
foo.oc:line 1: [# 1 "foo.oc"]
DIRECTIVE: line 1 file "foo.oc"
foo.oc:line 1: [line 1]
token 1.1: [line]
token 1.2: [1]
foo.oc:line 2: ["foo.oc" 2 "Apr  8 2019" "00:31:15"]
token 2.1: ["foo.oc"]
token 2.2: [2]
token 2.3: ["Apr]
token 2.4: [8]
token 2.5: [2019"]
token 2.6: ["00:31:15"]
foo.oc:line 3: [foo.oc, line 3.]
token 3.1: [foo.oc,]
token 3.2: [line]
token 3.3: [3.]
foo.oc:line 4: [# 1 "foo1.oh" 1]
DIRECTIVE: line 1 file "foo1.oh"
foo.oc:line 1: []
foo.oc:line 2: ["foo1.oh" 2 "Apr  8 2019" "00:31:15"]
token 2.1: ["foo1.oh"]
token 2.2: [2]
token 2.3: ["Apr]
token 2.4: [8]
token 2.5: [2019"]
token 2.6: ["00:31:15"]
foo.oc:line 3: [foo1.h, line 3.]
token 3.1: [foo1.h,]
token 3.2: [line]
token 3.3: [3.]
foo.oc:line 4: [foo1.h, line 4.]
token 4.1: [foo1.h,]
token 4.2: [line]
token 4.3: [4.]
foo.oc:line 5: []
foo.oc:line 6: [foo1.h, line 6. last line]
token 6.1: [foo1.h,]
token 6.2: [line]
token 6.3: [6.]
token 6.4: [last]
token 6.5: [line]
foo.oc:line 7: [# 5 "foo.oc" 2]
DIRECTIVE: line 5 file "foo.oc"
foo.oc:line 5: [foo.oc, line 5.]
token 5.1: [foo.oc,]
token 5.2: [line]
token 5.3: [5.]
foo.oc:line 6: [# 1 "foo2.oh" 1]
DIRECTIVE: line 1 file "foo2.oh"
foo.oc:line 1: []
foo.oc:line 2: ["foo2.oh" 2 "Apr  8 2019" "00:31:15"]
token 2.1: ["foo2.oh"]
token 2.2: [2]
token 2.3: ["Apr]
token 2.4: [8]
token 2.5: [2019"]
token 2.6: ["00:31:15"]
foo.oc:line 3: [foo2.h, line 3.]
token 3.1: [foo2.h,]
token 3.2: [line]
token 3.3: [3.]
foo.oc:line 4: [foo2.h, line 4.]
token 4.1: [foo2.h,]
token 4.2: [line]
token 4.3: [4.]
foo.oc:line 5: []
foo.oc:line 6: [foo2.h, line 6. last line]
token 6.1: [foo2.h,]
token 6.2: [line]
token 6.3: [6.]
token 6.4: [last]
token 6.5: [line]
foo.oc:line 7: [# 7 "foo.oc" 2]
DIRECTIVE: line 7 file "foo.oc"
foo.oc:line 7: [              on line 7]
token 7.1: [on]
token 7.2: [line]
token 7.3: [7]
foo.oc:line 8: ["foo1" + "foo2";]
token 8.1: ["foo1"]
token 8.2: [+]
token 8.3: ["foo2";]
foo.oc:line 9: [foo.oc, line 9, last line.]
token 9.1: [foo.oc,]
token 9.2: [line]
token 9.3: [9,]
token 9.4: [last]
token 9.5: [line.]
string_set[   5]:  6559333655947844422 0x4d7bb88->"on"
                   1370730858159036685 0x4d7bcd8->"+"
string_set[   8]:  4551451650890805270 0x4d7b238->"2"
string_set[   9]:  2050182975407056474 0x4d7b9c8->"last"
string_set[  20]:  5972723886193692166 0x4d7b648->""foo1.oh""
string_set[  22]: 10159970873491820195 0x4d7b0b8->"1"
string_set[  26]: 12291392672316406109 0x4d7afd8->"line"
string_set[  28]:  5813255960286872320 0x4d7bc68->""foo1""
string_set[  29]:   634126679689063869 0x4d7bb18->"foo2.h,"
string_set[  32]:   905566266843721762 0x4d7bbf8->"7"
string_set[  38]: 13853321805405257863 0x4d7b2a8->""Apr"
string_set[  39]:  4812876634208354182 0x4d7c178->"line."
string_set[  49]:  6824945695312339516 0x4d7ba38->"5."
string_set[  52]: 10868482316098135333 0x4d7b5d8->"3."
string_set[  53]: 15497051586616814418 0x4d7b568->"foo.oc,"
                  13395557376657251578 0x4d7b128->""foo.oc""
string_set[  61]:  3677451627196360743 0x4d7baa8->""foo2.oh""
string_set[  64]:  2605947960303068693 0x4d7b6b8->"foo1.h,"
string_set[  66]: 17899137375351314596 0x4d7b318->"8"
string_set[  67]:  1533165921084860899 0x4d7b8e8->"4."
string_set[  69]: 13412287444272116727 0x4d7b488->"2019""
string_set[  83]:  3167511089089007688 0x4d7bd48->""foo2";"
string_set[  86]: 11451267718977634605 0x4d7bdb8->"9,"
string_set[  88]: 17482636971663743696 0x4d7b958->"6."
string_set[  94]:  6875819416127169867 0x4d7b4f8->""00:31:15""
load_factor = 0.258
bucket_count = 97
max_bucket_size = 2
==13453== 
==13453== HEAP SUMMARY:
==13453==     in use at exit: 0 bytes in 0 blocks
==13453==   total heap usage: 38 allocs, 38 frees, 83,930 bytes allocated
==13453== 
==13453== All heap blocks were freed -- no leaks are possible
==13453== 
==13453== For counts of detected and suppressed errors, rerun with: -v
==13453== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
