head	1.4;
access;
symbols;
locks;
comment	@// @;


1.4
date	2019.04.04.00.17.43;	author -;	state -;
branches;
next	1.3;

1.3
date	2017.10.11.21.24.08;	author -;	state -;
branches;
next	1.2;

1.2
date	2016.10.06.23.42.53;	author -;	state -;
branches;
next	1.1;

1.1
date	2016.10.06.23.15.22;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: string_set.cpp,v 1.5 2019-03-15 14:32:40-07 - - $

#include <string>
#include <unordered_set>
using namespace std;

#include "auxlib.h"
#include "string_set.h"

unordered_set<string> string_set::set;

string_set::string_set() {
   set.max_load_factor (0.5);
}

const string* string_set::intern (const char* string) {
   auto handle = set.insert (string);
   DEBUGF ('s', "inserted \"%s\" %s\n", handle.first->c_str(),
           handle.second ? "newly inserted" : "already there");
   return &*handle.first;
}

void string_set::dump (FILE* out) {
   static unordered_set<string>::hasher hash_fn
               = string_set::set.hash_function();
   size_t max_bucket_size = 0;
   for (size_t bucket = 0; bucket < set.bucket_count(); ++bucket) {
      bool need_index = true;
      size_t curr_size = set.bucket_size (bucket);
      if (max_bucket_size < curr_size) max_bucket_size = curr_size;
      for (auto itor = set.cbegin (bucket);
           itor != set.cend (bucket); ++itor) {
         if (need_index) fprintf (out, "string_set[%4zu]: ", bucket);
                    else fprintf (out, "          %4s   ", "");
         need_index = false;
         const string* str = &*itor;
         fprintf (out, "%22zu %p->\"%s\"\n", hash_fn(*str),
                  reinterpret_cast<const void*> (str), str->c_str());
      }
   }
   fprintf (out, "load_factor = %.3f\n", set.load_factor());
   fprintf (out, "bucket_count = %zu\n", set.bucket_count());
   fprintf (out, "max_bucket_size = %zu\n", max_bucket_size);
}

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: string_set.cpp,v 1.3 2017-10-05 16:39:39-07 - - $
d38 1
a38 1
                  str, str->c_str());
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: string_set.cpp,v 1.2 2016-08-18 15:12:57-07 - - $
d7 1
d18 2
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: string_set.cpp,v 1.4 2016-09-21 16:56:20-07 - - $
d31 1
a31 1
                    else fprintf (out, "           %4s   ", "");
@
