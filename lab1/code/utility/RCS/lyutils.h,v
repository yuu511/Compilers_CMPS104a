head	1.11;
access;
symbols;
locks;
comment	@ * @;


1.11
date	2017.10.11.21.19.04;	author -;	state -;
branches;
next	1.10;

1.10
date	2016.10.06.23.42.53;	author -;	state -;
branches;
next	1.9;

1.9
date	2016.10.06.23.28.20;	author -;	state -;
branches;
next	1.8;

1.8
date	2016.10.06.23.24.34;	author -;	state -;
branches;
next	1.7;

1.7
date	2016.10.06.23.22.04;	author -;	state -;
branches;
next	1.6;

1.6
date	2016.10.06.23.13.39;	author -;	state -;
branches;
next	1.5;

1.5
date	2016.09.28.21.47.31;	author -;	state -;
branches;
next	1.4;

1.4
date	2016.04.07.20.04.52;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.04.10.00.45.26;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.10.12.01.53.00;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.10.10.01.32.37;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@// $Id: lyutils.h,v 1.6 2017-10-05 16:39:39-07 - - $

#ifndef __UTILS_H__
#define __UTILS_H__

// Lex and Yacc interface utility.

#include <string>
#include <vector>
using namespace std;

#include <stdio.h>

#include "astree.h"
#include "auxlib.h"

#define YYEOF 0

extern FILE* yyin;
extern char* yytext; 
extern int yy_flex_debug;
extern int yydebug;
extern size_t yyleng; 

int yylex();
int yylex_destroy();
int yyparse();
void yyerror (const char* message);

struct lexer {
   static bool interactive;
   static location lloc;
   static size_t last_yyleng;
   static vector<string> filenames;
   static const string* filename (int filenr);
   static void newfilename (const string& filename);
   static void advance();
   static void newline();
   static void badchar (unsigned char bad);
   static void badtoken (char* lexeme);
   static void include();
};

struct parser {
   static astree* root;
   static const char* get_tname (int symbol);
};

#define YYSTYPE_IS_DECLARED
typedef astree* YYSTYPE;
#include "yyparse.h"

#endif

@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: lyutils.h,v 1.3 2016-10-06 16:27:01-07 - - $
d17 2
d49 2
a50 1
#define YYSTYPE astree*
@


1.9
log
@-
@
text
@d15 1
a15 1
#include "syslib.h"
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: lyutils.h,v 1.7 2016-10-06 16:22:04-07 - - $
d15 1
d18 1
a18 1
extern const char* yytext;
d21 1
a21 1
extern size_t yyleng;
d24 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: lyutils.h,v 1.6 2016-10-06 16:13:39-07 - - $
d20 1
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: lyutils.h,v 1.5 2016-09-28 14:47:31-07 - - $
d16 2
d21 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: lyutils.h,v 1.1 2016-08-18 14:59:46-07 - - $
a14 1
#include "syslib.h"
@


1.4
log
@-
@
text
@d1 4
a4 2
#ifndef __LYUTILS_H__
#define __LYUTILS_H__
d8 4
d15 1
a15 3
#include "auxlib.h"

#define YYEOF 0
a16 4
extern FILE* yyin;
extern astree* yyparse_astree;
extern int yyin_linenr;
extern char* yytext;
a18 1
extern int yyleng;
d20 1
a20 2
int yylex (void);
int yyparse (void);
a21 11
int yylex_destroy (void);
const char* get_yytname (int symbol);
bool is_defined_token (int symbol);

const string* lexer_filename (int filenr);
void lexer_newfilename (const char* filename);
void lexer_badchar (unsigned char bad);
void lexer_badtoken (char* lexeme);
void lexer_newline (void);
void lexer_setecho (bool echoflag);
void lexer_useraction (void);
d23 18
a40 2
astree* new_parseroot (void);
int yylval_token (int symbol);
d42 1
a42 4
void lexer_include (void);

typedef astree* astree_pointer;
#define YYSTYPE astree_pointer
d46 1
@


1.3
log
@-
@
text
@a44 1
RCSH("$Id: lyutils.h,v 1.2 2013-10-11 18:53:00-07 - - $")
@


1.2
log
@-
@
text
@d28 7
a34 7
const string* scanner_filename (int filenr);
void scanner_newfilename (const char* filename);
void scanner_badchar (unsigned char bad);
void scanner_badtoken (char* lexeme);
void scanner_newline (void);
void scanner_setecho (bool echoflag);
void scanner_useraction (void);
d39 1
a39 1
void scanner_include (void);
d45 1
a45 1
RCSH("$Id: lyutils.h,v 1.4 2013-09-23 14:27:15-07 - - $")
@


1.1
log
@-
@
text
@d13 2
a14 2
extern FILE *yyin;
extern astree yyparse_astree;
d16 1
a16 1
extern char *yytext;
d23 4
a26 2
void yyerror (char *message);
const char *get_yytname (int symbol);
d28 2
a29 2
char *scanner_filename (int filenr);
void scanner_newfilename (char *filename);
d31 1
a31 1
void scanner_badtoken (char *lexeme);
d36 1
a36 1
astree new_parseroot (void);
d41 2
a42 1
#define YYSTYPE astree
d45 1
a45 2
// LINTED(static unused)
RCSH(LYUTILS_H,"$Id: lyutils.h,v 1.9 2011-10-06 22:05:30-07 - - $")
@
