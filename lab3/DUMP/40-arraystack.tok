#   7 "40-arraystack.oc"
    6   7.001 265 TOK_STRUCT    struct
    6   7.008 278 TOK_IDENT     stack
    6   7.014 123 '{'           {
    6   8.004 267 TOK_ARRAY     array
    6   8.009  60 '<'           <
    6   8.010 260 TOK_STRING    string
    6   8.016  62 '>'           >
    6   8.018 278 TOK_IDENT     data
    6   8.022  59 ';'           ;
    6   9.004 259 TOK_INT       int
    6   9.008 278 TOK_IDENT     size
    6   9.012  59 ';'           ;
    6  10.004 259 TOK_INT       int
    6  10.008 278 TOK_IDENT     top
    6  10.011  59 ';'           ;
    6  11.001 125 '}'           }
    6  11.002  59 ';'           ;
    6  13.001 270 TOK_PTR       ptr
    6  13.004  60 '<'           <
    6  13.005 265 TOK_STRUCT    struct
    6  13.012 278 TOK_IDENT     stack
    6  13.017  62 '>'           >
    6  13.019 278 TOK_IDENT     new_stack
    6  13.029  40 '('           (
    6  13.030 259 TOK_INT       int
    6  13.034 278 TOK_IDENT     size
    6  13.038  41 ')'           )
    6  13.040 123 '{'           {
    6  14.004 270 TOK_PTR       ptr
    6  14.007  60 '<'           <
    6  14.008 265 TOK_STRUCT    struct
    6  14.015 278 TOK_IDENT     stack
    6  14.020  62 '>'           >
    6  14.022 278 TOK_IDENT     stack
    6  14.028  61 '='           =
    6  14.030 269 TOK_ALLOC     alloc
    6  14.035  60 '<'           <
    6  14.036 265 TOK_STRUCT    struct
    6  14.043 278 TOK_IDENT     stack
    6  14.048  62 '>'           >
    6  14.049  40 '('           (
    6  14.050  41 ')'           )
    6  14.051  59 ';'           ;
    6  15.004 278 TOK_IDENT     stack
    6  15.009 268 TOK_ARROW     ->
    6  15.011 278 TOK_IDENT     data
    6  15.016  61 '='           =
    6  15.018 269 TOK_ALLOC     alloc
    6  15.023  60 '<'           <
    6  15.024 267 TOK_ARRAY     array
    6  15.029  60 '<'           <
    6  15.030 260 TOK_STRING    string
    6  15.036  62 '>'           >
    6  15.037  62 '>'           >
    6  15.039  40 '('           (
    6  15.040 278 TOK_IDENT     size
    6  15.044  41 ')'           )
    6  15.045  59 ';'           ;
    6  16.004 278 TOK_IDENT     stack
    6  16.009 268 TOK_ARROW     ->
    6  16.011 278 TOK_IDENT     size
    6  16.016  61 '='           =
    6  16.018 278 TOK_IDENT     size
    6  16.022  59 ';'           ;
    6  17.004 278 TOK_IDENT     stack
    6  17.009 268 TOK_ARROW     ->
    6  17.011 278 TOK_IDENT     top
    6  17.015  61 '='           =
    6  17.017  40 '('           (
    6  17.018  45 '-'           -
    6  17.019 279 TOK_INTCON    1
    6  17.020  41 ')'           )
    6  17.021  59 ';'           ;
    6  18.004 264 TOK_RETURN    return
    6  18.011 278 TOK_IDENT     stack
    6  18.016  59 ';'           ;
    6  19.001 125 '}'           }
    6  21.001 258 TOK_VOID      void
    6  21.006 278 TOK_IDENT     push
    6  21.011  40 '('           (
    6  21.012 270 TOK_PTR       ptr
    6  21.015  60 '<'           <
    6  21.016 265 TOK_STRUCT    struct
    6  21.023 278 TOK_IDENT     stack
    6  21.028  62 '>'           >
    6  21.030 278 TOK_IDENT     stack
    6  21.035  44 ','           ,
    6  21.037 260 TOK_STRING    string
    6  21.044 278 TOK_IDENT     str
    6  21.047  41 ')'           )
    6  21.049 123 '{'           {
    6  22.004 278 TOK_IDENT     assert
    6  22.011  40 '('           (
    6  22.012 278 TOK_IDENT     stack
    6  22.017 268 TOK_ARROW     ->
    6  22.019 278 TOK_IDENT     top
    6  22.023  60 '<'           <
    6  22.025 278 TOK_IDENT     stack
    6  22.030 268 TOK_ARROW     ->
    6  22.032 278 TOK_IDENT     size
    6  22.037  45 '-'           -
    6  22.039 279 TOK_INTCON    1
    6  22.040  41 ')'           )
    6  22.041  59 ';'           ;
    6  23.004 278 TOK_IDENT     stack
    6  23.009 268 TOK_ARROW     ->
    6  23.011 278 TOK_IDENT     top
    6  23.015  61 '='           =
    6  23.017 278 TOK_IDENT     stack
    6  23.022 268 TOK_ARROW     ->
    6  23.024 278 TOK_IDENT     top
    6  23.028  43 '+'           +
    6  23.030 279 TOK_INTCON    1
    6  23.031  59 ';'           ;
    6  24.004 278 TOK_IDENT     stack
    6  24.009 268 TOK_ARROW     ->
    6  24.011 278 TOK_IDENT     data
    6  24.015  91 '['           [
    6  24.016 278 TOK_IDENT     stack
    6  24.021 268 TOK_ARROW     ->
    6  24.023 278 TOK_IDENT     top
    6  24.026  93 ']'           ]
    6  24.028  61 '='           =
    6  24.030 278 TOK_IDENT     str
    6  24.033  59 ';'           ;
    6  25.001 125 '}'           }
    6  27.001 260 TOK_STRING    string
    6  27.008 278 TOK_IDENT     pop
    6  27.012  40 '('           (
    6  27.013 270 TOK_PTR       ptr
    6  27.016  60 '<'           <
    6  27.017 265 TOK_STRUCT    struct
    6  27.024 278 TOK_IDENT     stack
    6  27.029  62 '>'           >
    6  27.031 278 TOK_IDENT     stack
    6  27.036  41 ')'           )
    6  27.038 123 '{'           {
    6  28.004 260 TOK_STRING    string
    6  28.011 278 TOK_IDENT     tmp
    6  28.015  61 '='           =
    6  28.017 278 TOK_IDENT     stack
    6  28.022 268 TOK_ARROW     ->
    6  28.024 278 TOK_IDENT     data
    6  28.028  91 '['           [
    6  28.029 278 TOK_IDENT     stack
    6  28.034 268 TOK_ARROW     ->
    6  28.036 278 TOK_IDENT     top
    6  28.039  93 ']'           ]
    6  28.040  59 ';'           ;
    6  29.004 278 TOK_IDENT     assert
    6  29.011  40 '('           (
    6  29.012 278 TOK_IDENT     stack
    6  29.017 268 TOK_ARROW     ->
    6  29.019 278 TOK_IDENT     top
    6  29.023 272 TOK_NE        !=
    6  29.026  40 '('           (
    6  29.027  45 '-'           -
    6  29.028 279 TOK_INTCON    1
    6  29.029  41 ')'           )
    6  29.030  41 ')'           )
    6  29.031  59 ';'           ;
    6  30.004 278 TOK_IDENT     stack
    6  30.009 268 TOK_ARROW     ->
    6  30.011 278 TOK_IDENT     top
    6  30.015  61 '='           =
    6  30.017 278 TOK_IDENT     stack
    6  30.022 268 TOK_ARROW     ->
    6  30.024 278 TOK_IDENT     top
    6  30.028  45 '-'           -
    6  30.030 279 TOK_INTCON    1
    6  30.031  59 ';'           ;
    6  31.004 264 TOK_RETURN    return
    6  31.011 278 TOK_IDENT     tmp
    6  31.014  59 ';'           ;
    6  32.001 125 '}'           }
    6  34.001 259 TOK_INT       int
    6  34.005 278 TOK_IDENT     empty
    6  34.011  40 '('           (
    6  34.012 270 TOK_PTR       ptr
    6  34.015  60 '<'           <
    6  34.016 265 TOK_STRUCT    struct
    6  34.023 278 TOK_IDENT     stack
    6  34.028  62 '>'           >
    6  34.030 278 TOK_IDENT     stack
    6  34.035  41 ')'           )
    6  34.037 123 '{'           {
    6  35.004 264 TOK_RETURN    return
    6  35.011 278 TOK_IDENT     stack
    6  35.016 268 TOK_ARROW     ->
    6  35.018 278 TOK_IDENT     top
    6  35.022 271 TOK_EQ        ==
    6  35.025  40 '('           (
    6  35.026  45 '-'           -
    6  35.027 279 TOK_INTCON    1
    6  35.028  41 ')'           )
    6  35.029  59 ';'           ;
    6  36.001 125 '}'           }
    6  38.001 259 TOK_INT       int
    6  38.005 278 TOK_IDENT     main
    6  38.010  40 '('           (
    6  38.011 259 TOK_INT       int
    6  38.015 278 TOK_IDENT     argc
    6  38.019  44 ','           ,
    6  38.021 267 TOK_ARRAY     array
    6  38.026  60 '<'           <
    6  38.027 260 TOK_STRING    string
    6  38.033  62 '>'           >
    6  38.035 278 TOK_IDENT     argv
    6  38.039  41 ')'           )
    6  38.041 123 '{'           {
    6  39.004 270 TOK_PTR       ptr
    6  39.007  60 '<'           <
    6  39.008 265 TOK_STRUCT    struct
    6  39.015 278 TOK_IDENT     stack
    6  39.020  62 '>'           >
    6  39.022 278 TOK_IDENT     stack
    6  39.028  61 '='           =
    6  39.030 278 TOK_IDENT     new_stack
    6  39.040  40 '('           (
    6  39.041 279 TOK_INTCON    100
    6  39.044  41 ')'           )
    6  39.045  59 ';'           ;
    6  40.004 259 TOK_INT       int
    6  40.008 278 TOK_IDENT     argi
    6  40.013  61 '='           =
    6  40.015 279 TOK_INTCON    0
    6  40.016  59 ';'           ;
    6  41.004 263 TOK_WHILE     while
    6  41.010  40 '('           (
    6  41.011 278 TOK_IDENT     argi
    6  41.016  60 '<'           <
    6  41.018 278 TOK_IDENT     argc
    6  41.022  41 ')'           )
    6  41.024 123 '{'           {
    6  42.007 278 TOK_IDENT     push
    6  42.012  40 '('           (
    6  42.013 278 TOK_IDENT     stack
    6  42.018  44 ','           ,
    6  42.020 278 TOK_IDENT     argv
    6  42.024  91 '['           [
    6  42.025 278 TOK_IDENT     argi
    6  42.029  93 ']'           ]
    6  42.030  41 ')'           )
    6  42.031  59 ';'           ;
    6  43.007 278 TOK_IDENT     argi
    6  43.012  61 '='           =
    6  43.014 278 TOK_IDENT     argi
    6  43.019  43 '+'           +
    6  43.021 279 TOK_INTCON    1
    6  43.022  59 ';'           ;
    6  44.004 125 '}'           }
    6  45.004 263 TOK_WHILE     while
    6  45.010  40 '('           (
    6  45.011 277 TOK_NOT       not
    6  45.015 278 TOK_IDENT     empty
    6  45.021  40 '('           (
    6  45.022 278 TOK_IDENT     stack
    6  45.027  41 ')'           )
    6  45.028  41 ')'           )
    6  45.030 123 '{'           {
    6  46.007 278 TOK_IDENT     putstr
    6  46.014  40 '('           (
    6  46.015 278 TOK_IDENT     pop
    6  46.019  40 '('           (
    6  46.020 278 TOK_IDENT     stack
    6  46.025  41 ')'           )
    6  46.026  41 ')'           )
    6  46.027  59 ';'           ;
    6  47.007 278 TOK_IDENT     putchr
    6  47.014  40 '('           (
    6  47.015 280 TOK_CHARCON   '\n'
    6  47.019  41 ')'           )
    6  47.020  59 ';'           ;
    6  48.004 125 '}'           }
    6  49.004 264 TOK_RETURN    return
    6  49.011 278 TOK_IDENT     SUCCESS
    6  49.018  59 ';'           ;
    6  50.001 125 '}'           }
