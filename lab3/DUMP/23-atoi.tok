#   5 "23-atoi.oc"
    6   5.001 259 TOK_INT       int
    6   5.005 278 TOK_IDENT     atoi
    6   5.010  40 '('           (
    6   5.011 260 TOK_STRING    string
    6   5.018 278 TOK_IDENT     str
    6   5.021  41 ')'           )
    6   5.023 123 '{'           {
    6   6.004 278 TOK_IDENT     BOOL
    6   6.009 278 TOK_IDENT     neg
    6   6.013  61 '='           =
    6   6.015 278 TOK_IDENT     FALSE
    6   6.020  59 ';'           ;
    6   7.004 259 TOK_INT       int
    6   7.008 278 TOK_IDENT     num
    6   7.012  61 '='           =
    6   7.014 279 TOK_INTCON    0
    6   7.015  59 ';'           ;
    6   8.004 259 TOK_INT       int
    6   8.008 278 TOK_IDENT     digit
    6   8.014  61 '='           =
    6   8.016 279 TOK_INTCON    0
    6   8.017  59 ';'           ;
    6   9.004 278 TOK_IDENT     assert
    6   9.011  40 '('           (
    6   9.012 278 TOK_IDENT     str
    6   9.016 272 TOK_NE        !=
    6   9.019 266 TOK_NULLPTR   nullptr
    6   9.026  41 ')'           )
    6   9.027  59 ';'           ;
    6  10.004 261 TOK_IF        if
    6  10.007  40 '('           (
    6  10.008 278 TOK_IDENT     str
    6  10.011  91 '['           [
    6  10.012 279 TOK_INTCON    0
    6  10.013  93 ']'           ]
    6  10.015 272 TOK_NE        !=
    6  10.018 280 TOK_CHARCON   '\0'
    6  10.022  41 ')'           )
    6  10.024 123 '{'           {
    6  11.007 261 TOK_IF        if
    6  11.010  40 '('           (
    6  11.011 278 TOK_IDENT     str
    6  11.014  91 '['           [
    6  11.015 279 TOK_INTCON    0
    6  11.016  93 ']'           ]
    6  11.018 271 TOK_EQ        ==
    6  11.021 280 TOK_CHARCON   '-'
    6  11.024  41 ')'           )
    6  11.026 123 '{'           {
    6  12.010 278 TOK_IDENT     digit
    6  12.016  61 '='           =
    6  12.018 278 TOK_IDENT     digit
    6  12.024  43 '+'           +
    6  12.026 279 TOK_INTCON    1
    6  12.027  59 ';'           ;
    6  13.010 278 TOK_IDENT     neg
    6  13.014  61 '='           =
    6  13.016 278 TOK_IDENT     TRUE
    6  13.020  59 ';'           ;
    6  14.007 125 '}'           }
    6  15.007 278 TOK_IDENT     BOOL
    6  15.012 278 TOK_IDENT     contin
    6  15.019  61 '='           =
    6  15.021 278 TOK_IDENT     TRUE
    6  15.025  59 ';'           ;
    6  16.007 263 TOK_WHILE     while
    6  16.013  40 '('           (
    6  16.014 278 TOK_IDENT     contin
    6  16.020  41 ')'           )
    6  16.022 123 '{'           {
    6  17.010 261 TOK_IF        if
    6  17.013  40 '('           (
    6  17.014 278 TOK_IDENT     str
    6  17.017  91 '['           [
    6  17.018 278 TOK_IDENT     digit
    6  17.023  93 ']'           ]
    6  17.025 271 TOK_EQ        ==
    6  17.028 280 TOK_CHARCON   '\0'
    6  17.032  41 ')'           )
    6  17.034 123 '{'           {
    6  18.013 278 TOK_IDENT     contin
    6  18.020  61 '='           =
    6  18.022 278 TOK_IDENT     FALSE
    6  18.027  59 ';'           ;
    6  19.010 125 '}'           }
    6  19.011 262 TOK_ELSE      else
    6  19.016 123 '{'           {
    6  20.013 259 TOK_INT       int
    6  20.017 278 TOK_IDENT     chr
    6  20.021  61 '='           =
    6  20.023 278 TOK_IDENT     str
    6  20.026  91 '['           [
    6  20.027 278 TOK_IDENT     digit
    6  20.032  93 ']'           ]
    6  20.033  59 ';'           ;
    6  21.013 278 TOK_IDENT     digit
    6  21.019  61 '='           =
    6  21.021 278 TOK_IDENT     digit
    6  21.027  43 '+'           +
    6  21.029 279 TOK_INTCON    1
    6  21.030  59 ';'           ;
    6  22.013 261 TOK_IF        if
    6  22.016  40 '('           (
    6  22.017 278 TOK_IDENT     chr
    6  22.021  60 '<'           <
    6  22.023 280 TOK_CHARCON   '0'
    6  22.026  41 ')'           )
    6  22.028 278 TOK_IDENT     contin
    6  22.035  61 '='           =
    6  22.037 278 TOK_IDENT     FALSE
    6  22.042  59 ';'           ;
    6  23.013 262 TOK_ELSE      else
    6  23.018 261 TOK_IF        if
    6  23.021  40 '('           (
    6  23.022 278 TOK_IDENT     chr
    6  23.026  62 '>'           >
    6  23.028 280 TOK_CHARCON   '9'
    6  23.031  41 ')'           )
    6  23.033 278 TOK_IDENT     contin
    6  23.040  61 '='           =
    6  23.042 278 TOK_IDENT     FALSE
    6  23.047  59 ';'           ;
    6  24.013 262 TOK_ELSE      else
    6  24.018 278 TOK_IDENT     num
    6  24.022  61 '='           =
    6  24.024 278 TOK_IDENT     num
    6  24.028  42 '*'           *
    6  24.030 279 TOK_INTCON    10
    6  24.033  43 '+'           +
    6  24.035 278 TOK_IDENT     chr
    6  24.039  45 '-'           -
    6  24.041 280 TOK_CHARCON   '0'
    6  24.044  59 ';'           ;
    6  25.010 125 '}'           }
    6  26.007 125 '}'           }
    6  27.007 261 TOK_IF        if
    6  27.010  40 '('           (
    6  27.011 278 TOK_IDENT     neg
    6  27.014  41 ')'           )
    6  27.016 278 TOK_IDENT     num
    6  27.020  61 '='           =
    6  27.022  45 '-'           -
    6  27.024 278 TOK_IDENT     num
    6  27.027  59 ';'           ;
    6  28.004 125 '}'           }
    6  29.004 264 TOK_RETURN    return
    6  29.011 278 TOK_IDENT     num
    6  29.014  59 ';'           ;
    6  30.001 125 '}'           }
    6  32.001 259 TOK_INT       int
    6  32.005 278 TOK_IDENT     main
    6  32.010  40 '('           (
    6  32.011 259 TOK_INT       int
    6  32.015 278 TOK_IDENT     argc
    6  32.019  44 ','           ,
    6  32.021 267 TOK_ARRAY     array
    6  32.026  60 '<'           <
    6  32.027 260 TOK_STRING    string
    6  32.033  62 '>'           >
    6  32.035 278 TOK_IDENT     argv
    6  32.039  41 ')'           )
    6  32.041 123 '{'           {
    6  33.004 259 TOK_INT       int
    6  33.008 278 TOK_IDENT     argi
    6  33.013  61 '='           =
    6  33.015 279 TOK_INTCON    1
    6  33.016  59 ';'           ;
    6  34.004 260 TOK_STRING    string
    6  34.011 278 TOK_IDENT     arg
    6  34.015  61 '='           =
    6  34.017 266 TOK_NULLPTR   nullptr
    6  34.024  59 ';'           ;
    6  35.004 263 TOK_WHILE     while
    6  35.010  40 '('           (
    6  35.011 278 TOK_IDENT     argi
    6  35.016  60 '<'           <
    6  35.018 278 TOK_IDENT     argc
    6  35.022  41 ')'           )
    6  35.024 123 '{'           {
    6  36.007 278 TOK_IDENT     arg
    6  36.011  61 '='           =
    6  36.013 278 TOK_IDENT     argv
    6  36.017  91 '['           [
    6  36.018 278 TOK_IDENT     argi
    6  36.022  93 ']'           ]
    6  36.023  59 ';'           ;
    6  37.007 278 TOK_IDENT     putstr
    6  37.014  40 '('           (
    6  37.015 278 TOK_IDENT     arg
    6  37.018  41 ')'           )
    6  37.019  59 ';'           ;
    6  38.007 278 TOK_IDENT     putstr
    6  38.014  40 '('           (
    6  38.015 281 TOK_STRINGCON " = "
    6  38.020  41 ')'           )
    6  38.021  59 ';'           ;
    6  39.007 278 TOK_IDENT     putint
    6  39.014  40 '('           (
    6  39.015 278 TOK_IDENT     atoi
    6  39.020  40 '('           (
    6  39.021 278 TOK_IDENT     arg
    6  39.024  41 ')'           )
    6  39.025  41 ')'           )
    6  39.026  59 ';'           ;
    6  40.007 278 TOK_IDENT     putchr
    6  40.014  40 '('           (
    6  40.015 280 TOK_CHARCON   '\n'
    6  40.019  41 ')'           )
    6  40.020  59 ';'           ;
    6  41.007 278 TOK_IDENT     argi
    6  41.012  61 '='           =
    6  41.014 278 TOK_IDENT     argi
    6  41.019  43 '+'           +
    6  41.021 279 TOK_INTCON    1
    6  41.022  59 ';'           ;
    6  42.004 125 '}'           }
    6  43.004 264 TOK_RETURN    return
    6  43.011 278 TOK_IDENT     SUCCESS
    6  43.018  59 ';'           ;
    6  44.001 125 '}'           }
