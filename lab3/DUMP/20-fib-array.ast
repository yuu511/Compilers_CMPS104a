; TOK_ROOT "<<ROOT>>" (0.0.0)
;    TOK_FUNCTION "(" (6.10.9)
;       TOK_TYPE_ID "" (6.10.1)
;          TOK_INT "int" (6.10.1)
;          TOK_IDENT "main" (6.10.5)
;       TOK_BLOCK "{" (6.10.12)
;          TOK_VARDECL "=" (6.11.25)
;             TOK_TYPE_ID "" (6.11.4)
;                TOK_ARRAY "array" (6.11.4)
;                   TOK_INT "int" (6.11.10)
;                TOK_IDENT "fibonacci" (6.11.15)
;             TOK_ALLOC "alloc" (6.11.27)
;                TOK_ARRAY "array" (6.11.33)
;                   TOK_INT "int" (6.11.39)
;                TOK_INTCON "30" (6.11.46)
;          '=' "=" (6.12.17)
;             TOK_INDEX "[" (6.12.13)
;                TOK_IDENT "fibonacci" (6.12.4)
;                TOK_INTCON "0" (6.12.14)
;             TOK_INTCON "0" (6.12.19)
;          '=' "=" (6.13.17)
;             TOK_INDEX "[" (6.13.13)
;                TOK_IDENT "fibonacci" (6.13.4)
;                TOK_INTCON "1" (6.13.14)
;             TOK_INTCON "1" (6.13.19)
;          TOK_VARDECL "=" (6.14.14)
;             TOK_TYPE_ID "" (6.14.4)
;                TOK_INT "int" (6.14.4)
;                TOK_IDENT "index" (6.14.8)
;             TOK_INTCON "2" (6.14.16)
;          TOK_WHILE "while" (6.15.4)
;             TOK_LT "<" (6.15.17)
;                TOK_IDENT "index" (6.15.11)
;                TOK_INTCON "30" (6.15.19)
;             TOK_BLOCK "{" (6.15.23)
;                '=' "=" (6.16.24)
;                   TOK_INDEX "[" (6.16.16)
;                      TOK_IDENT "fibonacci" (6.16.7)
;                      TOK_IDENT "index" (6.16.17)
;                   '+' "+" (6.16.47)
;                      TOK_INDEX "[" (6.16.35)
;                         TOK_IDENT "fibonacci" (6.16.26)
;                         '-' "-" (6.16.42)
;                            TOK_IDENT "index" (6.16.36)
;                            TOK_INTCON "1" (6.16.44)
;                      TOK_INDEX "[" (6.16.58)
;                         TOK_IDENT "fibonacci" (6.16.49)
;                         '-' "-" (6.16.65)
;                            TOK_IDENT "index" (6.16.59)
;                            TOK_INTCON "2" (6.16.67)
;                '=' "=" (6.17.13)
;                   TOK_IDENT "index" (6.17.7)
;                   '+' "+" (6.17.21)
;                      TOK_IDENT "index" (6.17.15)
;                      TOK_INTCON "1" (6.17.23)
;          '=' "=" (6.19.10)
;             TOK_IDENT "index" (6.19.4)
;             TOK_INTCON "0" (6.19.12)
;          TOK_CALL "(" (6.20.11)
;             TOK_IDENT "putstr" (6.20.4)
;             TOK_STRINGCON ""Numeri di figlio Bonacci\n"" (6.20.12)
;          TOK_WHILE "while" (6.21.4)
;             TOK_LT "<" (6.21.17)
;                TOK_IDENT "index" (6.21.11)
;                TOK_INTCON "30" (6.21.19)
;             TOK_BLOCK "{" (6.21.23)
;                TOK_CALL "(" (6.22.14)
;                   TOK_IDENT "putstr" (6.22.7)
;                   TOK_STRINGCON ""fibonacci["" (6.22.15)
;                TOK_CALL "(" (6.23.14)
;                   TOK_IDENT "putint" (6.23.7)
;                   TOK_IDENT "index" (6.23.15)
;                TOK_CALL "(" (6.24.14)
;                   TOK_IDENT "putstr" (6.24.7)
;                   TOK_STRINGCON ""] = "" (6.24.15)
;                TOK_CALL "(" (6.25.14)
;                   TOK_IDENT "putint" (6.25.7)
;                   TOK_INDEX "[" (6.25.24)
;                      TOK_IDENT "fibonacci" (6.25.15)
;                      TOK_IDENT "index" (6.25.25)
;                TOK_CALL "(" (6.26.14)
;                   TOK_IDENT "putchr" (6.26.7)
;                   TOK_CHARCON "'\n'" (6.26.15)
;                '=' "=" (6.27.13)
;                   TOK_IDENT "index" (6.27.7)
;                   '+' "+" (6.27.21)
;                      TOK_IDENT "index" (6.27.15)
;                      TOK_INTCON "1" (6.27.23)
;          TOK_RETURN "return" (6.29.4)
;             TOK_IDENT "SUCCESS" (6.29.11)
