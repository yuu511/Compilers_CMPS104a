#  22 "oclib.h"
    6  22.001 258 TOK_VOID      void
    6  22.006 278 TOK_IDENT     fail
    6  22.011  40 '('           (
    6  22.012 260 TOK_STRING    string
    6  22.019 278 TOK_IDENT     expr
    6  22.023  44 ','           ,
    6  22.025 260 TOK_STRING    string
    6  22.032 278 TOK_IDENT     file
    6  22.036  44 ','           ,
    6  22.038 259 TOK_INT       int
    6  22.042 278 TOK_IDENT     line
    6  22.046  41 ')'           )
    6  22.047  59 ';'           ;
    6  24.001 258 TOK_VOID      void
    6  24.006 278 TOK_IDENT     putchr
    6  24.013  40 '('           (
    6  24.014 259 TOK_INT       int
    6  24.018 278 TOK_IDENT     chr
    6  24.021  41 ')'           )
    6  24.022  59 ';'           ;
    6  25.001 258 TOK_VOID      void
    6  25.006 278 TOK_IDENT     putint
    6  25.013  40 '('           (
    6  25.014 259 TOK_INT       int
    6  25.018 278 TOK_IDENT     num
    6  25.021  41 ')'           )
    6  25.022  59 ';'           ;
    6  26.001 258 TOK_VOID      void
    6  26.006 278 TOK_IDENT     putstr
    6  26.013  40 '('           (
    6  26.014 260 TOK_STRING    string
    6  26.021 278 TOK_IDENT     str
    6  26.024  41 ')'           )
    6  26.025  59 ';'           ;
    6  28.001 259 TOK_INT       int
    6  28.005 278 TOK_IDENT     getchr
    6  28.011  40 '('           (
    6  28.012  41 ')'           )
    6  28.013  59 ';'           ;
    6  29.001 260 TOK_STRING    string
    6  29.008 278 TOK_IDENT     getstr
    6  29.014  40 '('           (
    6  29.015  41 ')'           )
    6  29.016  59 ';'           ;
    6  30.001 260 TOK_STRING    string
    6  30.008 278 TOK_IDENT     getln
    6  30.013  40 '('           (
    6  30.014  41 ')'           )
    6  30.015  59 ';'           ;
#   5 "41-linkedstack.oc"
    7   5.001 265 TOK_STRUCT    struct
    7   5.008 278 TOK_IDENT     node
    7   5.013 123 '{'           {
    7   6.004 260 TOK_STRING    string
    7   6.011 278 TOK_IDENT     data
    7   6.015  59 ';'           ;
    7   7.004 270 TOK_PTR       ptr
    7   7.008  60 '<'           <
    7   7.009 265 TOK_STRUCT    struct
    7   7.016 278 TOK_IDENT     node
    7   7.020  62 '>'           >
    7   7.022 278 TOK_IDENT     link
    7   7.026  59 ';'           ;
    7   8.001 125 '}'           }
    7   8.002  59 ';'           ;
    7  10.001 265 TOK_STRUCT    struct
    7  10.008 278 TOK_IDENT     stack
    7  10.014 123 '{'           {
    7  11.004 270 TOK_PTR       ptr
    7  11.008  60 '<'           <
    7  11.009 265 TOK_STRUCT    struct
    7  11.016 278 TOK_IDENT     node
    7  11.020  62 '>'           >
    7  11.022 278 TOK_IDENT     top
    7  11.025  59 ';'           ;
    7  12.001 125 '}'           }
    7  12.002  59 ';'           ;
    7  14.001 259 TOK_INT       int
    7  14.005 278 TOK_IDENT     empty
    7  14.011  40 '('           (
    7  14.012 270 TOK_PTR       ptr
    7  14.015  60 '<'           <
    7  14.016 265 TOK_STRUCT    struct
    7  14.023 278 TOK_IDENT     stack
    7  14.028  62 '>'           >
    7  14.030 278 TOK_IDENT     stack
    7  14.035  41 ')'           )
    7  14.037 123 '{'           {
    7  15.004 123 '{'           {
    7  15.005 261 TOK_IF        if
    7  15.008  40 '('           (
    7  15.009 277 TOK_NOT       not
    7  15.013  40 '('           (
    7  15.014 278 TOK_IDENT     stack
    7  15.020 272 TOK_NE        !=
    7  15.023 266 TOK_NULLPTR   nullptr
    7  15.030  41 ')'           )
    7  15.031  41 ')'           )
    7  15.033 278 TOK_IDENT     fail
    7  15.038  40 '('           (
    7  15.039 281 TOK_STRINGCON "stack != nullptr"
    7  15.057  44 ','           ,
    7  15.059 281 TOK_STRINGCON "41-linkedstack.oc"
    7  15.078  44 ','           ,
    7  15.080 279 TOK_INTCON    15
    7  15.082  41 ')'           )
    7  15.083  59 ';'           ;
    7  15.084 125 '}'           }
    7  15.085  59 ';'           ;
    7  16.004 264 TOK_RETURN    return
    7  16.011 278 TOK_IDENT     stack
    7  16.016 268 TOK_ARROW     ->
    7  16.018 278 TOK_IDENT     top
    7  16.022 271 TOK_EQ        ==
    7  16.025 266 TOK_NULLPTR   nullptr
    7  16.032  59 ';'           ;
    7  17.001 125 '}'           }
    7  19.001 270 TOK_PTR       ptr
    7  19.004  60 '<'           <
    7  19.005 265 TOK_STRUCT    struct
    7  19.012 278 TOK_IDENT     stack
    7  19.017  62 '>'           >
    7  19.019 278 TOK_IDENT     new_stack
    7  19.028  40 '('           (
    7  19.029  41 ')'           )
    7  19.031 123 '{'           {
    7  20.004 270 TOK_PTR       ptr
    7  20.007  60 '<'           <
    7  20.008 265 TOK_STRUCT    struct
    7  20.015 278 TOK_IDENT     stack
    7  20.020  62 '>'           >
    7  20.022 278 TOK_IDENT     stack
    7  20.028  61 '='           =
    7  20.030 269 TOK_ALLOC     alloc
    7  20.035  60 '<'           <
    7  20.036 265 TOK_STRUCT    struct
    7  20.043 278 TOK_IDENT     stack
    7  20.048  62 '>'           >
    7  20.049  40 '('           (
    7  20.050  41 ')'           )
    7  20.051  59 ';'           ;
    7  21.004 278 TOK_IDENT     stack
    7  21.009 268 TOK_ARROW     ->
    7  21.011 278 TOK_IDENT     top
    7  21.015  61 '='           =
    7  21.017 266 TOK_NULLPTR   nullptr
    7  21.024  59 ';'           ;
    7  22.004 264 TOK_RETURN    return
    7  22.011 278 TOK_IDENT     stack
    7  22.016  59 ';'           ;
    7  23.001 125 '}'           }
    7  25.001 258 TOK_VOID      void
    7  25.006 278 TOK_IDENT     push
    7  25.011  40 '('           (
    7  25.012 270 TOK_PTR       ptr
    7  25.015  60 '<'           <
    7  25.016 265 TOK_STRUCT    struct
    7  25.023 278 TOK_IDENT     stack
    7  25.028  62 '>'           >
    7  25.030 278 TOK_IDENT     stack
    7  25.035  44 ','           ,
    7  25.037 260 TOK_STRING    string
    7  25.044 278 TOK_IDENT     str
    7  25.047  41 ')'           )
    7  25.049 123 '{'           {
    7  26.004 270 TOK_PTR       ptr
    7  26.008  60 '<'           <
    7  26.009 265 TOK_STRUCT    struct
    7  26.016 278 TOK_IDENT     node
    7  26.020  62 '>'           >
    7  26.022 278 TOK_IDENT     tmp
    7  26.026  61 '='           =
    7  26.028 269 TOK_ALLOC     alloc
    7  26.033  60 '<'           <
    7  26.034 265 TOK_STRUCT    struct
    7  26.041 278 TOK_IDENT     node
    7  26.045  62 '>'           >
    7  26.046  40 '('           (
    7  26.047  41 ')'           )
    7  26.048  59 ';'           ;
    7  27.004 123 '{'           {
    7  27.005 261 TOK_IF        if
    7  27.008  40 '('           (
    7  27.009 277 TOK_NOT       not
    7  27.013  40 '('           (
    7  27.014 278 TOK_IDENT     stack
    7  27.020 272 TOK_NE        !=
    7  27.023 266 TOK_NULLPTR   nullptr
    7  27.030  41 ')'           )
    7  27.031  41 ')'           )
    7  27.033 278 TOK_IDENT     fail
    7  27.038  40 '('           (
    7  27.039 281 TOK_STRINGCON "stack != nullptr"
    7  27.057  44 ','           ,
    7  27.059 281 TOK_STRINGCON "41-linkedstack.oc"
    7  27.078  44 ','           ,
    7  27.080 279 TOK_INTCON    27
    7  27.082  41 ')'           )
    7  27.083  59 ';'           ;
    7  27.084 125 '}'           }
    7  27.085  59 ';'           ;
    7  28.004 278 TOK_IDENT     tmp
    7  28.007 268 TOK_ARROW     ->
    7  28.009 278 TOK_IDENT     data
    7  28.014  61 '='           =
    7  28.016 278 TOK_IDENT     str
    7  28.019  59 ';'           ;
    7  29.004 278 TOK_IDENT     tmp
    7  29.007 268 TOK_ARROW     ->
    7  29.009 278 TOK_IDENT     link
    7  29.014  61 '='           =
    7  29.016 278 TOK_IDENT     stack
    7  29.021 268 TOK_ARROW     ->
    7  29.023 278 TOK_IDENT     top
    7  29.026  59 ';'           ;
    7  30.004 278 TOK_IDENT     stack
    7  30.009 268 TOK_ARROW     ->
    7  30.011 278 TOK_IDENT     top
    7  30.015  61 '='           =
    7  30.017 278 TOK_IDENT     tmp
    7  30.020  59 ';'           ;
    7  31.001 125 '}'           }
    7  33.001 260 TOK_STRING    string
    7  33.008 278 TOK_IDENT     pop
    7  33.012  40 '('           (
    7  33.013 270 TOK_PTR       ptr
    7  33.016  60 '<'           <
    7  33.017 265 TOK_STRUCT    struct
    7  33.024 278 TOK_IDENT     stack
    7  33.029  62 '>'           >
    7  33.031 278 TOK_IDENT     stack
    7  33.036  41 ')'           )
    7  33.038 123 '{'           {
    7  34.004 260 TOK_STRING    string
    7  34.011 278 TOK_IDENT     tmp
    7  34.015  61 '='           =
    7  34.017 278 TOK_IDENT     stack
    7  34.022 268 TOK_ARROW     ->
    7  34.024 278 TOK_IDENT     top
    7  34.027 268 TOK_ARROW     ->
    7  34.029 278 TOK_IDENT     data
    7  34.033  59 ';'           ;
    7  35.004 123 '{'           {
    7  35.005 261 TOK_IF        if
    7  35.008  40 '('           (
    7  35.009 277 TOK_NOT       not
    7  35.013  40 '('           (
    7  35.014 278 TOK_IDENT     stack
    7  35.020 272 TOK_NE        !=
    7  35.023 266 TOK_NULLPTR   nullptr
    7  35.030  41 ')'           )
    7  35.031  41 ')'           )
    7  35.033 278 TOK_IDENT     fail
    7  35.038  40 '('           (
    7  35.039 281 TOK_STRINGCON "stack != nullptr"
    7  35.057  44 ','           ,
    7  35.059 281 TOK_STRINGCON "41-linkedstack.oc"
    7  35.078  44 ','           ,
    7  35.080 279 TOK_INTCON    35
    7  35.082  41 ')'           )
    7  35.083  59 ';'           ;
    7  35.084 125 '}'           }
    7  35.085  59 ';'           ;
    7  36.004 123 '{'           {
    7  36.005 261 TOK_IF        if
    7  36.008  40 '('           (
    7  36.009 277 TOK_NOT       not
    7  36.013  40 '('           (
    7  36.014 277 TOK_NOT       not
    7  36.018 278 TOK_IDENT     empty
    7  36.024  40 '('           (
    7  36.025 278 TOK_IDENT     stack
    7  36.030  41 ')'           )
    7  36.031  41 ')'           )
    7  36.032  41 ')'           )
    7  36.034 278 TOK_IDENT     fail
    7  36.039  40 '('           (
    7  36.040 281 TOK_STRINGCON "not empty (stack)"
    7  36.059  44 ','           ,
    7  36.061 281 TOK_STRINGCON "41-linkedstack.oc"
    7  36.080  44 ','           ,
    7  36.082 279 TOK_INTCON    36
    7  36.084  41 ')'           )
    7  36.085  59 ';'           ;
    7  36.086 125 '}'           }
    7  36.087  59 ';'           ;
    7  37.004 278 TOK_IDENT     stack
    7  37.009 268 TOK_ARROW     ->
    7  37.011 278 TOK_IDENT     top
    7  37.015  61 '='           =
    7  37.017 278 TOK_IDENT     stack
    7  37.022 268 TOK_ARROW     ->
    7  37.024 278 TOK_IDENT     top
    7  37.027 268 TOK_ARROW     ->
    7  37.029 278 TOK_IDENT     link
    7  37.033  59 ';'           ;
    7  38.004 264 TOK_RETURN    return
    7  38.011 278 TOK_IDENT     tmp
    7  38.014  59 ';'           ;
    7  39.001 125 '}'           }
    7  41.001 259 TOK_INT       int
    7  41.005 278 TOK_IDENT     main
    7  41.010  40 '('           (
    7  41.011 259 TOK_INT       int
    7  41.015 278 TOK_IDENT     argc
    7  41.019  44 ','           ,
    7  41.021 267 TOK_ARRAY     array
    7  41.026  60 '<'           <
    7  41.027 260 TOK_STRING    string
    7  41.033  62 '>'           >
    7  41.035 278 TOK_IDENT     argv
    7  41.039  41 ')'           )
    7  41.041 123 '{'           {
    7  42.004 259 TOK_INT       int
    7  42.008 278 TOK_IDENT     argi
    7  42.013  61 '='           =
    7  42.015 279 TOK_INTCON    0
    7  42.016  59 ';'           ;
    7  43.004 270 TOK_PTR       ptr
    7  43.007  60 '<'           <
    7  43.008 265 TOK_STRUCT    struct
    7  43.015 278 TOK_IDENT     stack
    7  43.020  62 '>'           >
    7  43.022 278 TOK_IDENT     stack
    7  43.028  61 '='           =
    7  43.030 278 TOK_IDENT     new_stack
    7  43.039  40 '('           (
    7  43.040  41 ')'           )
    7  43.041  59 ';'           ;
    7  44.004 263 TOK_WHILE     while
    7  44.010  40 '('           (
    7  44.011 278 TOK_IDENT     argi
    7  44.016  60 '<'           <
    7  44.018 278 TOK_IDENT     argc
    7  44.022  41 ')'           )
    7  44.024 123 '{'           {
    7  45.007 278 TOK_IDENT     push
    7  45.012  40 '('           (
    7  45.013 278 TOK_IDENT     stack
    7  45.018  44 ','           ,
    7  45.020 278 TOK_IDENT     argv
    7  45.024  91 '['           [
    7  45.025 278 TOK_IDENT     argi
    7  45.029  93 ']'           ]
    7  45.030  41 ')'           )
    7  45.031  59 ';'           ;
    7  46.007 278 TOK_IDENT     argi
    7  46.012  61 '='           =
    7  46.014 278 TOK_IDENT     argi
    7  46.019  43 '+'           +
    7  46.021 279 TOK_INTCON    1
    7  46.022  59 ';'           ;
    7  47.004 125 '}'           }
    7  48.004 263 TOK_WHILE     while
    7  48.010  40 '('           (
    7  48.011 277 TOK_NOT       not
    7  48.015 278 TOK_IDENT     empty
    7  48.021  40 '('           (
    7  48.022 278 TOK_IDENT     stack
    7  48.027  41 ')'           )
    7  48.028  41 ')'           )
    7  48.030 123 '{'           {
    7  49.007 278 TOK_IDENT     putstr
    7  49.014  40 '('           (
    7  49.015 278 TOK_IDENT     pop
    7  49.019  40 '('           (
    7  49.020 278 TOK_IDENT     stack
    7  49.025  41 ')'           )
    7  49.026  41 ')'           )
    7  49.027  59 ';'           ;
    7  50.007 278 TOK_IDENT     putchr
    7  50.014  40 '('           (
    7  50.015 280 TOK_CHARCON   '\n'
    7  50.019  41 ')'           )
    7  50.020  59 ';'           ;
    7  51.004 125 '}'           }
    7  52.004 264 TOK_RETURN    return
    7  52.011 279 TOK_INTCON    0
    7  52.012  59 ';'           ;
    7  53.001 125 '}'           }
