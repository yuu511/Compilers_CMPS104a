#   5 "41-linkedstack.oc"
    6   5.001 265 TOK_STRUCT    struct
    6   5.008 278 TOK_IDENT     node
    6   5.013 123 '{'           {
    6   6.004 260 TOK_STRING    string
    6   6.011 278 TOK_IDENT     data
    6   6.015  59 ';'           ;
    6   7.004 270 TOK_PTR       ptr
    6   7.008  60 '<'           <
    6   7.009 265 TOK_STRUCT    struct
    6   7.016 278 TOK_IDENT     node
    6   7.020  62 '>'           >
    6   7.022 278 TOK_IDENT     link
    6   7.026  59 ';'           ;
    6   8.001 125 '}'           }
    6   8.002  59 ';'           ;
    6  10.001 265 TOK_STRUCT    struct
    6  10.008 278 TOK_IDENT     stack
    6  10.014 123 '{'           {
    6  11.004 270 TOK_PTR       ptr
    6  11.008  60 '<'           <
    6  11.009 265 TOK_STRUCT    struct
    6  11.016 278 TOK_IDENT     node
    6  11.020  62 '>'           >
    6  11.022 278 TOK_IDENT     top
    6  11.025  59 ';'           ;
    6  12.001 125 '}'           }
    6  12.002  59 ';'           ;
    6  14.001 259 TOK_INT       int
    6  14.005 278 TOK_IDENT     empty
    6  14.011  40 '('           (
    6  14.012 270 TOK_PTR       ptr
    6  14.015  60 '<'           <
    6  14.016 265 TOK_STRUCT    struct
    6  14.023 278 TOK_IDENT     stack
    6  14.028  62 '>'           >
    6  14.030 278 TOK_IDENT     stack
    6  14.035  41 ')'           )
    6  14.037 123 '{'           {
    6  15.004 278 TOK_IDENT     assert
    6  15.011  40 '('           (
    6  15.012 278 TOK_IDENT     stack
    6  15.018 272 TOK_NE        !=
    6  15.021 266 TOK_NULLPTR   nullptr
    6  15.028  41 ')'           )
    6  15.029  59 ';'           ;
    6  16.004 264 TOK_RETURN    return
    6  16.011 278 TOK_IDENT     stack
    6  16.016 268 TOK_ARROW     ->
    6  16.018 278 TOK_IDENT     top
    6  16.022 271 TOK_EQ        ==
    6  16.025 266 TOK_NULLPTR   nullptr
    6  16.032  59 ';'           ;
    6  17.001 125 '}'           }
    6  19.001 270 TOK_PTR       ptr
    6  19.004  60 '<'           <
    6  19.005 265 TOK_STRUCT    struct
    6  19.012 278 TOK_IDENT     stack
    6  19.017  62 '>'           >
    6  19.019 278 TOK_IDENT     new_stack
    6  19.028  40 '('           (
    6  19.029  41 ')'           )
    6  19.031 123 '{'           {
    6  20.004 270 TOK_PTR       ptr
    6  20.007  60 '<'           <
    6  20.008 265 TOK_STRUCT    struct
    6  20.015 278 TOK_IDENT     stack
    6  20.020  62 '>'           >
    6  20.022 278 TOK_IDENT     stack
    6  20.028  61 '='           =
    6  20.030 269 TOK_ALLOC     alloc
    6  20.035  60 '<'           <
    6  20.036 265 TOK_STRUCT    struct
    6  20.043 278 TOK_IDENT     stack
    6  20.048  62 '>'           >
    6  20.049  40 '('           (
    6  20.050  41 ')'           )
    6  20.051  59 ';'           ;
    6  21.004 278 TOK_IDENT     stack
    6  21.009 268 TOK_ARROW     ->
    6  21.011 278 TOK_IDENT     top
    6  21.015  61 '='           =
    6  21.017 266 TOK_NULLPTR   nullptr
    6  21.024  59 ';'           ;
    6  22.004 264 TOK_RETURN    return
    6  22.011 278 TOK_IDENT     stack
    6  22.016  59 ';'           ;
    6  23.001 125 '}'           }
    6  25.001 258 TOK_VOID      void
    6  25.006 278 TOK_IDENT     push
    6  25.011  40 '('           (
    6  25.012 270 TOK_PTR       ptr
    6  25.015  60 '<'           <
    6  25.016 265 TOK_STRUCT    struct
    6  25.023 278 TOK_IDENT     stack
    6  25.028  62 '>'           >
    6  25.030 278 TOK_IDENT     stack
    6  25.035  44 ','           ,
    6  25.037 260 TOK_STRING    string
    6  25.044 278 TOK_IDENT     str
    6  25.047  41 ')'           )
    6  25.049 123 '{'           {
    6  26.004 270 TOK_PTR       ptr
    6  26.008  60 '<'           <
    6  26.009 265 TOK_STRUCT    struct
    6  26.016 278 TOK_IDENT     node
    6  26.020  62 '>'           >
    6  26.022 278 TOK_IDENT     tmp
    6  26.026  61 '='           =
    6  26.028 269 TOK_ALLOC     alloc
    6  26.033  60 '<'           <
    6  26.034 265 TOK_STRUCT    struct
    6  26.041 278 TOK_IDENT     node
    6  26.045  62 '>'           >
    6  26.046  40 '('           (
    6  26.047  41 ')'           )
    6  26.048  59 ';'           ;
    6  27.004 278 TOK_IDENT     assert
    6  27.011  40 '('           (
    6  27.012 278 TOK_IDENT     stack
    6  27.018 272 TOK_NE        !=
    6  27.021 266 TOK_NULLPTR   nullptr
    6  27.028  41 ')'           )
    6  27.029  59 ';'           ;
    6  28.004 278 TOK_IDENT     tmp
    6  28.007 268 TOK_ARROW     ->
    6  28.009 278 TOK_IDENT     data
    6  28.014  61 '='           =
    6  28.016 278 TOK_IDENT     str
    6  28.019  59 ';'           ;
    6  29.004 278 TOK_IDENT     tmp
    6  29.007 268 TOK_ARROW     ->
    6  29.009 278 TOK_IDENT     link
    6  29.014  61 '='           =
    6  29.016 278 TOK_IDENT     stack
    6  29.021 268 TOK_ARROW     ->
    6  29.023 278 TOK_IDENT     top
    6  29.026  59 ';'           ;
    6  30.004 278 TOK_IDENT     stack
    6  30.009 268 TOK_ARROW     ->
    6  30.011 278 TOK_IDENT     top
    6  30.015  61 '='           =
    6  30.017 278 TOK_IDENT     tmp
    6  30.020  59 ';'           ;
    6  31.001 125 '}'           }
    6  33.001 260 TOK_STRING    string
    6  33.008 278 TOK_IDENT     pop
    6  33.012  40 '('           (
    6  33.013 270 TOK_PTR       ptr
    6  33.016  60 '<'           <
    6  33.017 265 TOK_STRUCT    struct
    6  33.024 278 TOK_IDENT     stack
    6  33.029  62 '>'           >
    6  33.031 278 TOK_IDENT     stack
    6  33.036  41 ')'           )
    6  33.038 123 '{'           {
    6  34.004 260 TOK_STRING    string
    6  34.011 278 TOK_IDENT     tmp
    6  34.015  61 '='           =
    6  34.017 278 TOK_IDENT     stack
    6  34.022 268 TOK_ARROW     ->
    6  34.024 278 TOK_IDENT     top
    6  34.027 268 TOK_ARROW     ->
    6  34.029 278 TOK_IDENT     data
    6  34.033  59 ';'           ;
    6  35.004 278 TOK_IDENT     assert
    6  35.011  40 '('           (
    6  35.012 278 TOK_IDENT     stack
    6  35.018 272 TOK_NE        !=
    6  35.021 266 TOK_NULLPTR   nullptr
    6  35.028  41 ')'           )
    6  35.029  59 ';'           ;
    6  36.004 278 TOK_IDENT     assert
    6  36.011  40 '('           (
    6  36.012 277 TOK_NOT       not
    6  36.016 278 TOK_IDENT     empty
    6  36.022  40 '('           (
    6  36.023 278 TOK_IDENT     stack
    6  36.028  41 ')'           )
    6  36.029  41 ')'           )
    6  36.030  59 ';'           ;
    6  37.004 278 TOK_IDENT     stack
    6  37.009 268 TOK_ARROW     ->
    6  37.011 278 TOK_IDENT     top
    6  37.015  61 '='           =
    6  37.017 278 TOK_IDENT     stack
    6  37.022 268 TOK_ARROW     ->
    6  37.024 278 TOK_IDENT     top
    6  37.027 268 TOK_ARROW     ->
    6  37.029 278 TOK_IDENT     link
    6  37.033  59 ';'           ;
    6  38.004 264 TOK_RETURN    return
    6  38.011 278 TOK_IDENT     tmp
    6  38.014  59 ';'           ;
    6  39.001 125 '}'           }
    6  41.001 259 TOK_INT       int
    6  41.005 278 TOK_IDENT     main
    6  41.010  40 '('           (
    6  41.011 259 TOK_INT       int
    6  41.015 278 TOK_IDENT     argc
    6  41.019  44 ','           ,
    6  41.021 267 TOK_ARRAY     array
    6  41.026  60 '<'           <
    6  41.027 260 TOK_STRING    string
    6  41.033  62 '>'           >
    6  41.035 278 TOK_IDENT     argv
    6  41.039  41 ')'           )
    6  41.041 123 '{'           {
    6  42.004 259 TOK_INT       int
    6  42.008 278 TOK_IDENT     argi
    6  42.013  61 '='           =
    6  42.015 279 TOK_INTCON    0
    6  42.016  59 ';'           ;
    6  43.004 270 TOK_PTR       ptr
    6  43.007  60 '<'           <
    6  43.008 265 TOK_STRUCT    struct
    6  43.015 278 TOK_IDENT     stack
    6  43.020  62 '>'           >
    6  43.022 278 TOK_IDENT     stack
    6  43.028  61 '='           =
    6  43.030 278 TOK_IDENT     new_stack
    6  43.039  40 '('           (
    6  43.040  41 ')'           )
    6  43.041  59 ';'           ;
    6  44.004 263 TOK_WHILE     while
    6  44.010  40 '('           (
    6  44.011 278 TOK_IDENT     argi
    6  44.016  60 '<'           <
    6  44.018 278 TOK_IDENT     argc
    6  44.022  41 ')'           )
    6  44.024 123 '{'           {
    6  45.007 278 TOK_IDENT     push
    6  45.012  40 '('           (
    6  45.013 278 TOK_IDENT     stack
    6  45.018  44 ','           ,
    6  45.020 278 TOK_IDENT     argv
    6  45.024  91 '['           [
    6  45.025 278 TOK_IDENT     argi
    6  45.029  93 ']'           ]
    6  45.030  41 ')'           )
    6  45.031  59 ';'           ;
    6  46.007 278 TOK_IDENT     argi
    6  46.012  61 '='           =
    6  46.014 278 TOK_IDENT     argi
    6  46.019  43 '+'           +
    6  46.021 279 TOK_INTCON    1
    6  46.022  59 ';'           ;
    6  47.004 125 '}'           }
    6  48.004 263 TOK_WHILE     while
    6  48.010  40 '('           (
    6  48.011 277 TOK_NOT       not
    6  48.015 278 TOK_IDENT     empty
    6  48.021  40 '('           (
    6  48.022 278 TOK_IDENT     stack
    6  48.027  41 ')'           )
    6  48.028  41 ')'           )
    6  48.030 123 '{'           {
    6  49.007 278 TOK_IDENT     putstr
    6  49.014  40 '('           (
    6  49.015 278 TOK_IDENT     pop
    6  49.019  40 '('           (
    6  49.020 278 TOK_IDENT     stack
    6  49.025  41 ')'           )
    6  49.026  41 ')'           )
    6  49.027  59 ';'           ;
    6  50.007 278 TOK_IDENT     putchr
    6  50.014  40 '('           (
    6  50.015 280 TOK_CHARCON   '\n'
    6  50.019  41 ')'           )
    6  50.020  59 ';'           ;
    6  51.004 125 '}'           }
    6  52.004 264 TOK_RETURN    return
    6  52.011 278 TOK_IDENT     SUCCESS
    6  52.018  59 ';'           ;
    6  53.001 125 '}'           }
