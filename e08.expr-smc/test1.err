Command: zexprsm -ly test1.in
-- popen (/usr/bin/cpp test1.in), fileno(yyin) = 4
Starting parse
Entering state 0
Reducing stack by rule 5 (line 46):
-> $$ = nterm stmtseq (0x5a23320->{ROOT 0.0.0 "<<ROOT>>":)
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 36 ("# 1 "test1.in"")
--included # 1 "test1.in"
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "<built-in>"")
--included # 1 "<built-in>"
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "<command-line>"")
--included # 1 "<command-line>"
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "/usr/include/stdc-predef.h" 1 3 4")
--included # 1 "/usr/include/stdc-predef.h"
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "<command-line>" 2")
--included # 1 "<command-line>"
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "test1.in"")
--included # 1 "test1.in"
--accepting rule at line 38 ("
")
--accepting rule at line 38 ("
")
--accepting rule at line 41 ("a")
Next token is token IDENT (0x5a279d0->{IDENT 6.2.1 "a":)
Shifting token IDENT (0x5a279d0->{IDENT 6.2.1 "a":)
Entering state 5
Reducing stack by rule 15 (line 58):
   $1 = token IDENT (0x5a279d0->{IDENT 6.2.1 "a":)
-> $$ = nterm expr (0x5a279d0->{IDENT 6.2.1 "a":)
Stack now 0 2
Entering state 11
Reading a token: --accepting rule at line 42 ("=")
Next token is token '=' (0x5a27b80->{'=' 6.2.2 "=":)
Shifting token '=' (0x5a27b80->{'=' 6.2.2 "=":)
Entering state 16
Reading a token: --accepting rule at line 41 ("b")
Next token is token IDENT (0x5a27cc0->{IDENT 6.2.3 "b":)
Shifting token IDENT (0x5a27cc0->{IDENT 6.2.3 "b":)
Entering state 5
Reducing stack by rule 15 (line 58):
   $1 = token IDENT (0x5a27cc0->{IDENT 6.2.3 "b":)
-> $$ = nterm expr (0x5a27cc0->{IDENT 6.2.3 "b":)
Stack now 0 2 11 16
Entering state 24
Reading a token: --accepting rule at line 45 ("*")
Next token is token '*' (0x5a27e00->{'*' 6.2.4 "*":)
Shifting token '*' (0x5a27e00->{'*' 6.2.4 "*":)
Entering state 19
Reading a token: --accepting rule at line 41 ("c")
Next token is token IDENT (0x5a27fe0->{IDENT 6.2.5 "c":)
Shifting token IDENT (0x5a27fe0->{IDENT 6.2.5 "c":)
Entering state 5
Reducing stack by rule 15 (line 58):
   $1 = token IDENT (0x5a27fe0->{IDENT 6.2.5 "c":)
-> $$ = nterm expr (0x5a27fe0->{IDENT 6.2.5 "c":)
Stack now 0 2 11 16 24 19
Entering state 27
Reading a token: --accepting rule at line 43 ("+")
Next token is token '+' (0x5a28120->{'+' 6.2.6 "+":)
Reducing stack by rule 9 (line 52):
   $1 = nterm expr (0x5a27cc0->{IDENT 6.2.3 "b":)
   $2 = token '*' (0x5a27e00->{'*' 6.2.4 "*":)
   $3 = nterm expr (0x5a27fe0->{IDENT 6.2.5 "c":)
-> $$ = nterm expr (0x5a27e00->{'*' 6.2.4 "*": 0x5a27cc0 0x5a27fe0)
Stack now 0 2 11 16
Entering state 24
Next token is token '+' (0x5a28120->{'+' 6.2.6 "+":)
Shifting token '+' (0x5a28120->{'+' 6.2.6 "+":)
Entering state 17
Reading a token: --accepting rule at line 41 ("d")
Next token is token IDENT (0x5a28300->{IDENT 6.2.7 "d":)
Shifting token IDENT (0x5a28300->{IDENT 6.2.7 "d":)
Entering state 5
Reducing stack by rule 15 (line 58):
   $1 = token IDENT (0x5a28300->{IDENT 6.2.7 "d":)
-> $$ = nterm expr (0x5a28300->{IDENT 6.2.7 "d":)
Stack now 0 2 11 16 24 17
Entering state 25
Reading a token: --accepting rule at line 45 ("*")
Next token is token '*' (0x5a28440->{'*' 6.2.8 "*":)
Shifting token '*' (0x5a28440->{'*' 6.2.8 "*":)
Entering state 19
Reading a token: --accepting rule at line 41 ("e")
Next token is token IDENT (0x5a28520->{IDENT 6.2.9 "e":)
Shifting token IDENT (0x5a28520->{IDENT 6.2.9 "e":)
Entering state 5
Reducing stack by rule 15 (line 58):
   $1 = token IDENT (0x5a28520->{IDENT 6.2.9 "e":)
-> $$ = nterm expr (0x5a28520->{IDENT 6.2.9 "e":)
Stack now 0 2 11 16 24 17 25 19
Entering state 27
Reading a token: --accepting rule at line 50 (";")
Next token is token ';' (0x5a28660->{';' 6.2.10 ";":)
Reducing stack by rule 9 (line 52):
   $1 = nterm expr (0x5a28300->{IDENT 6.2.7 "d":)
   $2 = token '*' (0x5a28440->{'*' 6.2.8 "*":)
   $3 = nterm expr (0x5a28520->{IDENT 6.2.9 "e":)
-> $$ = nterm expr (0x5a28440->{'*' 6.2.8 "*": 0x5a28300 0x5a28520)
Stack now 0 2 11 16 24 17
Entering state 25
Next token is token ';' (0x5a28660->{';' 6.2.10 ";":)
Reducing stack by rule 7 (line 50):
   $1 = nterm expr (0x5a27e00->{'*' 6.2.4 "*": 0x5a27cc0 0x5a27fe0)
   $2 = token '+' (0x5a28120->{'+' 6.2.6 "+":)
   $3 = nterm expr (0x5a28440->{'*' 6.2.8 "*": 0x5a28300 0x5a28520)
-> $$ = nterm expr (0x5a28120->{'+' 6.2.6 "+": 0x5a27e00 0x5a28440)
Stack now 0 2 11 16
Entering state 24
Next token is token ';' (0x5a28660->{';' 6.2.10 ";":)
Reducing stack by rule 6 (line 49):
   $1 = nterm expr (0x5a279d0->{IDENT 6.2.1 "a":)
   $2 = token '=' (0x5a27b80->{'=' 6.2.2 "=":)
   $3 = nterm expr (0x5a28120->{'+' 6.2.6 "+": 0x5a27e00 0x5a28440)
-> $$ = nterm expr (0x5a27b80->{'=' 6.2.2 "=": 0x5a279d0 0x5a28120)
Stack now 0 2
Entering state 11
Next token is token ';' (0x5a28660->{';' 6.2.10 ";":)
Shifting token ';' (0x5a28660->{';' 6.2.10 ";":)
Entering state 22
Reducing stack by rule 2 (line 43):
   $1 = nterm stmtseq (0x5a23320->{ROOT 0.0.0 "<<ROOT>>":)
   $2 = nterm expr (0x5a27b80->{'=' 6.2.2 "=": 0x5a279d0 0x5a28120)
   $3 = token ';' (0x5a28660->{';' 6.2.10 ";":)
Deleting astree (0x5a28660->{';' 6.2.10 ";":)
-> $$ = nterm stmtseq (0x5a23320->{ROOT 0.0.0 "<<ROOT>>": 0x5a27b80)
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 38 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 40):
   $1 = nterm stmtseq (0x5a23320->{ROOT 0.0.0 "<<ROOT>>": 0x5a27b80)
-> $$ = nterm program (nullptr)
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm program (nullptr)
Dumping parser::root:
0x5a23320->{ROOT 0.0.0 "<<ROOT>>": 0x5a27b80
   0x5a27b80->{'=' 6.2.2 "=": 0x5a279d0 0x5a28120
      0x5a279d0->{IDENT 6.2.1 "a":
      0x5a28120->{'+' 6.2.6 "+": 0x5a27e00 0x5a28440
         0x5a27e00->{'*' 6.2.4 "*": 0x5a27cc0 0x5a27fe0
            0x5a27cc0->{IDENT 6.2.3 "b":
            0x5a27fe0->{IDENT 6.2.5 "c":
         0x5a28440->{'*' 6.2.8 "*": 0x5a28300 0x5a28520
            0x5a28300->{IDENT 6.2.7 "d":
            0x5a28520->{IDENT 6.2.9 "e":
Dumping string_set:
string_set[   0]:   10959529184379665549 0x5a280c8->"c"
                    3729804957429652673 0x5a23418->"<<ROOT>>"
string_set[   1]:    2540012008095083820 0x5a28608->"e"
                   11597697714117577063 0x5a27c68->"="
                   10838281452030117757 0x5a27da8->"b"
string_set[   3]:    1370730858159036685 0x5a28208->"+"
                    6637313742931709005 0x5a27ee8->"*"
string_set[   4]:    5344662657899890615 0x5a28748->";"
string_set[   5]:   14494284460613645429 0x5a283e8->"d"
string_set[   7]:    4993892634952068459 0x5a27ab8->"a"
load_factor = 0.909
bucket_count = 11
max_bucket_size = 3
Deleting astree (0x5a28520->{IDENT 6.2.9 "e":)
Deleting astree (0x5a28300->{IDENT 6.2.7 "d":)
Deleting astree (0x5a28440->{'*' 6.2.8 "*":)
Deleting astree (0x5a27fe0->{IDENT 6.2.5 "c":)
Deleting astree (0x5a27cc0->{IDENT 6.2.3 "b":)
Deleting astree (0x5a27e00->{'*' 6.2.4 "*":)
Deleting astree (0x5a28120->{'+' 6.2.6 "+":)
Deleting astree (0x5a279d0->{IDENT 6.2.1 "a":)
Deleting astree (0x5a27b80->{'=' 6.2.2 "=":)
Deleting astree (0x5a23320->{ROOT 0.0.0 "<<ROOT>>":)
