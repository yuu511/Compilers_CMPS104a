head	1.10;
access;
symbols;
locks;
comment	@ * @;


1.10
date	2016.10.06.23.42.35;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.07.10.01.25.23;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.07.09.21.52.13;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.07.09.21.08.58;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.07.09.02.21.19;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.07.09.00.45.16;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.07.08.21.28.49;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.07.08.21.19.43;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.07.08.21.15.55;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.07.08.20.29.32;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: astree.h,v 1.9 2015-07-09 18:25:23-07 - - $

#ifndef __ASTREE_H__
#define __ASTREE_H__

#include <string>
#include <vector>
using namespace std;

#include "auxlib.h"

struct location {
   size_t filenr;
   size_t linenr;
   size_t offset;
};

struct astree {

   // Fields.
   int symbol;               // token code
   location lloc;            // source location
   const string* lexinfo;    // pointer to lexical information
   vector<astree*> children; // children of this n-way node

   // Functions.
   astree (int symbol, const location&, const char* lexinfo);
   ~astree();
   astree* adopt (astree* child1, astree* child2 = nullptr);
   astree* adopt_sym (astree* child, int symbol);
   void dump_node (FILE*);
   void dump_tree (FILE*, int depth = 0);
   static void dump (FILE* outfile, astree* tree);
   static void print (FILE* outfile, astree* tree, int depth = 0);
};

void destroy (astree* tree1, astree* tree2 = nullptr);

void errllocprintf (const location&, const char* format, const char*);

#endif

@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.8 2015-07-09 14:52:13-07 - - $
d10 1
a10 1
#include "syslib.h"
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.7 2015-07-09 14:08:58-07 - - $
d39 2
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.6 2015-07-08 19:21:19-07 - - $
d28 1
a32 1
   ~astree();
d34 1
a38 1

@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.5 2015-07-08 17:45:16-07 - - $
d27 2
a28 3
   astree (int symbol, int filenr, int linenr, int offset,
           const char* lexinfo);
   astree* adopt (astree* child1 = nullptr, astree* child2 = nullptr);
d33 1
a33 1
   static void print (FILE* outfile, astree* tree);
d38 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.4 2015-07-08 14:28:49-07 - - $
d12 6
d22 1
a22 3
   size_t filenr;            // index into filename stack
   size_t linenr;            // line number from source code
   size_t offset;            // offset of token with current line
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.3 2015-07-08 14:19:43-07 - - $
d10 1
a10 1
#include "auxlib.h"
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.2 2015-07-08 14:15:55-07 - - $
d30 1
a32 1
void yyprint (FILE* outfile, astree* tree);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.1 2015-07-08 13:29:32-07 - - $
d33 1
a33 1
void yydestroy (astree* tree1, astree* tree2 = nullptr);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: astree.h,v 1.1 2015-07-08 13:24:25-07 - - $
d33 1
@
