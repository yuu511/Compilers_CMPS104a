head	1.40;
access;
symbols;
locks;
comment	@# @;


1.40
date	2019.04.18.20.38.03;	author -;	state -;
branches;
next	1.39;

1.39
date	2019.04.17.22.28.08;	author -;	state -;
branches;
next	1.38;

1.38
date	2019.04.10.22.51.41;	author -;	state -;
branches;
next	1.37;

1.37
date	2019.04.05.23.00.29;	author -;	state -;
branches;
next	1.36;

1.36
date	2019.04.04.21.31.22;	author -;	state -;
branches;
next	1.35;

1.35
date	2019.03.15.21.28.32;	author -;	state -;
branches;
next	1.34;

1.34
date	2019.03.15.21.27.26;	author -;	state -;
branches;
next	1.33;

1.33
date	2019.03.15.21.24.12;	author -;	state -;
branches;
next	1.32;

1.32
date	2018.04.12.22.11.49;	author -;	state -;
branches;
next	1.31;

1.31
date	2018.04.12.22.09.12;	author -;	state -;
branches;
next	1.30;

1.30
date	2018.04.12.22.06.26;	author -;	state -;
branches;
next	1.29;

1.29
date	2018.04.12.22.02.42;	author -;	state -;
branches;
next	1.28;

1.28
date	2018.01.23.21.24.31;	author -;	state -;
branches;
next	1.27;

1.27
date	2018.01.22.22.11.38;	author -;	state -;
branches;
next	1.26;

1.26
date	2017.10.26.22.38.29;	author -;	state -;
branches;
next	1.25;

1.25
date	2017.10.19.23.02.14;	author -;	state -;
branches;
next	1.24;

1.24
date	2017.10.05.23.39.39;	author -;	state -;
branches;
next	1.23;

1.23
date	2016.10.12.23.59.53;	author -;	state -;
branches;
next	1.22;

1.22
date	2016.10.06.23.42.35;	author -;	state -;
branches;
next	1.21;

1.21
date	2016.10.06.23.27.42;	author -;	state -;
branches;
next	1.20;

1.20
date	2016.10.06.23.26.41;	author -;	state -;
branches;
next	1.19;

1.19
date	2016.08.18.22.05.42;	author -;	state -;
branches;
next	1.18;

1.18
date	2016.08.18.21.59.46;	author -;	state -;
branches;
next	1.17;

1.17
date	2016.04.07.20.20.44;	author -;	state -;
branches;
next	1.16;

1.16
date	2016.04.07.20.20.06;	author -;	state -;
branches;
next	1.15;

1.15
date	2016.04.07.20.18.47;	author -;	state -;
branches;
next	1.14;

1.14
date	2016.04.07.20.09.39;	author -;	state -;
branches;
next	1.13;

1.13
date	2015.11.13.21.50.41;	author -;	state -;
branches;
next	1.12;

1.12
date	2015.07.10.01.41.17;	author -;	state -;
branches;
next	1.11;

1.11
date	2015.07.10.01.33.22;	author -;	state -;
branches;
next	1.10;

1.10
date	2015.07.10.01.32.20;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.07.10.01.10.52;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.07.09.21.08.58;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.07.09.02.21.19;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.07.09.00.45.16;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.07.08.21.39.44;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.07.08.21.06.20;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.07.08.20.31.37;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.07.08.20.31.14;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.07.08.20.29.32;	author -;	state -;
branches;
next	;


desc
@@


1.40
log
@-
@
text
@# $Id: Makefile,v 1.39 2019-04-17 15:28:08-07 - - $

DEPSFILE  = Makefile.deps
NOINCLUDE = ci clean spotless
NEEDINCL  = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}}
WARNING   = -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast
GPP       = g++ -std=gnu++17 -g -O0
GPPWARN   = ${GPP} ${WARNING} -fdiagnostics-color=never
GPPYY     = ${GPP} -Wno-sign-compare -Wno-register
MKDEPS    = g++ -std=gnu++17 -MM
GRIND     = valgrind --leak-check=full --show-reachable=yes
UTILBIN   = /afs/cats.ucsc.edu/courses/cmps104a-wm/bin/

MODULES   = astree lyutils string_set emitter auxlib
HDRSRC    = ${MODULES:=.h}
CPPSRC    = ${MODULES:=.cpp} main.cpp
FLEXSRC   = lexer.l
BISONSRC  = parser.y
PARSEHDR  = yyparse.h
LEXCPP    = yylex.cpp
PARSECPP  = yyparse.cpp
CGENS     = ${LEXCPP} ${PARSECPP}
ALLGENS   = ${PARSEHDR} ${CGENS}
EXECBIN   = zexprsm
ALLCSRC   = ${CPPSRC} ${CGENS}
OBJECTS   = ${ALLCSRC:.cpp=.o}
LEXOUT    = yylex.output
PARSEOUT  = yyparse.output
REPORTS   = ${LEXOUT} ${PARSEOUT}
MODSRC    = ${foreach MOD, ${MODULES}, ${MOD}.h ${MOD}.cpp}
MISCSRC   = ${filter-out ${MODSRC}, ${HDRSRC} ${CPPSRC}}
ALLSRC    = README ${FLEXSRC} ${BISONSRC} ${MODSRC} ${MISCSRC} Makefile
TESTINS   = ${wildcard test*.in}
EXECTEST  = ${EXECBIN} -ly
LISTSRC   = ${ALLSRC} ${DEPSFILE} ${PARSEHDR}

all : ${EXECBIN}

${EXECBIN} : ${OBJECTS}
	${GPPWARN} -o${EXECBIN} ${OBJECTS}

yylex.o : yylex.cpp
	${GPPYY} -c $<

yyparse.o : yyparse.cpp
	${GPPYY} -c $<

%.o : %.cpp
	- ${UTILBIN}/cpplint.py.perl $<
	- ${UTILBIN}/checksource $<
	${GPPWARN} -c $<


${LEXCPP} : ${FLEXSRC}
	flex --outfile=${LEXCPP} ${FLEXSRC}

${PARSECPP} ${PARSEHDR} : ${BISONSRC}
	bison --defines=${PARSEHDR} --output=${PARSECPP} ${BISONSRC}

ci : ${ALLSRC} ${TESTINS}
	- ${UTILBIN}/checksource ${ALLSRC}
	${UTILBIN}/cid + ${ALLSRC} ${TESTINS} test?.inh

lis : ${LISTSRC} tests
	${UTILBIN}/mkpspdf List.source.ps ${LISTSRC}
	${UTILBIN}/mkpspdf List.output.ps ${REPORTS} \
	      ${foreach test, ${TESTINS:.in=}, \
	      ${patsubst %, ${test}.%, in out err log}}

clean :
	- rm ${OBJECTS} ${ALLGENS} ${REPORTS} ${DEPSFILE} core
	- rm ${foreach test, ${TESTINS:.in=}, \
	      ${patsubst %, ${test}.%, out err log}}

spotless : clean
	- rm ${EXECBIN} List.*.ps List.*.pdf

deps : ${ALLCSRC}
	@@ echo "# ${DEPSFILE} created `date` by ${MAKE}" >${DEPSFILE}
	${MKDEPS} ${ALLCSRC} >>${DEPSFILE}

${DEPSFILE} :
	@@ touch ${DEPSFILE}
	${MAKE} --no-print-directory deps

tests : ${EXECBIN}
	touch ${TESTINS}
	gmake --no-print-directory ${TESTINS:.in=.out}

%.out %.err : %.in
	${GRIND} --log-file=$*.log ${EXECTEST} $< 1>$*.out 2>$*.err; \
	echo EXIT STATUS = $$? >>$*.log

again :
	gmake --no-print-directory spotless deps ci all lis
	
ifeq "${NEEDINCL}" ""
include ${DEPSFILE}
endif

@


1.39
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.38 2019-04-10 15:51:41-07 - - $
d67 2
a68 2
		${foreach test, ${TESTINS:.in=}, \
		${patsubst %, ${test}.%, in out err log}}
d73 1
a73 1
		${patsubst %, ${test}.%, out err log}}
@


1.38
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.37 2019-04-05 16:00:29-07 - - $
d7 3
a9 3
CPP       = g++ -std=gnu++17 -g -O0
CPPWARN   = ${CPP} ${WARNING} -fdiagnostics-color=never
CPPYY     = ${CPP} -Wno-sign-compare -Wno-register
d12 1
a12 2
FLEX      = flex --outfile=${LEXCPP}
BISON     = bison --defines=${PARSEHDR} --output=${PARSECPP}
d40 1
a40 1
	${CPPWARN} -o${EXECBIN} ${OBJECTS}
d43 1
a43 1
	${CPPYY} -c $<
d46 1
a46 1
	${CPPYY} -c $<
d49 3
a51 3
	- cpplint.py.perl $<
	- checksource $<
	${CPPWARN} -c $<
d55 1
a55 1
	${FLEX} ${FLEXSRC}
d58 1
a58 1
	${BISON} ${BISONSRC}
d61 2
a62 2
	- checksource ${ALLSRC}
	cid + ${ALLSRC} ${TESTINS} test?.inh
d65 2
a66 2
	mkpspdf List.source.ps ${LISTSRC}
	mkpspdf List.output.ps ${REPORTS} \
d88 1
a88 1
	make --no-print-directory ${TESTINS:.in=.out}
@


1.37
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.36 2019-04-04 14:31:22-07 - - $
d54 1
a60 1

@


1.36
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.35 2019-03-15 14:28:32-07 - - $
d51 1
@


1.35
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.34 2019-03-15 14:27:26-07 - - $
d6 1
a6 1
WARNING   = -Wall -Wextra -Werror -Wpedantic -Wshadow -Wold-style-cast
@


1.34
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.33 2019-03-15 14:24:12-07 - - $
d6 1
a6 1
WARNING   = -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast
@


1.33
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.32 2018-04-12 15:11:49-07 - - $
d6 1
a6 1
WARNING   = -Wall -Wextra -Werror -Wpedantic -Wshadow -Wold-style-cast
@


1.32
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.31 2018-04-12 15:09:12-07 - - $
d6 1
d8 1
a8 1
CPPWARN   = ${CPP} -Wall -Wextra -Wold-style-cast
@


1.31
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.30 2018-04-12 15:06:26-07 - - $
d12 1
a12 2
BISON     = bison --defines=${PARSEHDR} --output=${PARSECPP} --xml
XML2HTML  = xsltproc /usr/share/bison/xslt/xml2xhtml.xsl
a56 1
	${XML2HTML} yyparse.xml >yyparse.html
@


1.30
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.29 2018-04-12 15:02:42-07 - - $
d7 2
a8 1
CPPW      = ${CPP} -Wall -Wextra -Wold-style-cast
d41 1
a41 1
	${CPPW} -o${EXECBIN} ${OBJECTS}
d44 1
a44 1
	${CPP} -Wno-sign-compare -Wno-register -c $<
d47 1
a47 1
	${CPP} -Wno-sign-compare -Wno-register -c $<
d50 2
a51 1
	${CPPW} -c $<
a62 1
	- cpplint.py.perl ${CPPSRC}
@


1.29
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.28 2018-01-23 13:24:31-08 - - $
d43 4
a46 2
	@@ # Suppress warning message from flex compilation.
	${CPP} -Wno-sign-compare -c $<
@


1.28
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.27 2018-01-22 14:11:38-08 - - $
d6 2
a7 1
CPP       = g++ -std=gnu++17 -g -O0 -Wall -Wextra -Wold-style-cast
d40 1
a40 1
	${CPP} -o${EXECBIN} ${OBJECTS}
d47 1
a47 1
	${CPP} -c $<
@


1.27
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.26 2017-10-26 15:38:29-07 - - $
d6 2
a7 2
CPP       = g++ -g -O0 -Wall -Wextra -Wold-style-cast -std=gnu++17
MKDEPS    = g++ -MM -std=gnu++17
@


1.26
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.25 2017-10-19 16:02:14-07 - - $
d6 2
a7 2
CPP       = g++ -g -O0 -Wall -Wextra -std=gnu++14
MKDEPS    = g++ -MM -std=gnu++14
@


1.25
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.24 2017-10-05 16:39:39-07 - - $
d6 2
a7 2
CPP       = g++ -g -O0 -Wall -Wextra -std=gnu++1z
MKDEPS    = g++ -MM -std=gnu++1z
@


1.24
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.23 2016-10-12 16:59:53-07 - - $
d6 2
a7 2
CPP       = g++ -g -O0 -Wall -Wextra -std=gnu++14
MKDEPS    = g++ -MM -std=gnu++14
@


1.23
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.22 2016-10-06 16:42:35-07 - - $
d42 1
a42 1
	# Suppress warning message from flex compilation.
@


1.22
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.21 2016-10-06 16:27:42-07 - - $
d10 2
a11 1
BISON     = bison --defines=${PARSEHDR} --output=${PARSECPP}
d53 1
@


1.21
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.20 2016-10-06 16:26:41-07 - - $
d12 1
a12 1
MODULES   = astree lyutils string_set emitter syslib
@


1.20
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.19 2016-08-18 15:05:42-07 - - $
a16 1
LEXHDR    = yylex.h
d21 1
a21 1
ALLGENS   = ${LEXHDR} ${PARSEHDR} ${CGENS}
d73 1
a73 1
dep : ${ALLCSRC}
@


1.19
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.18 2016-08-18 14:59:46-07 - - $
d9 1
a9 1
FLEX      = flex --header-file=${LEXHDR} --outfile=${LEXCPP}
a52 1
	echo -e '1,$$!cpp -fpreprocessed -dD\nw\nq\n' | ex ${PARSEHDR}
d74 1
a74 1
deps : ${ALLCSRC}
@


1.18
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.17 2016-04-07 13:20:44-07 - - $
d12 1
a12 1
MODULES   = astree lyutils stringset emitter syslib
@


1.17
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.16 2016-04-07 13:20:06-07 - - $
d12 1
a12 1
MODULES   = astree utils stringset emitter syslib
@


1.16
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.15 2016-04-07 13:18:47-07 - - $
d42 1
@


1.15
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.14 2016-04-07 13:09:39-07 - - $
d86 1
a86 1
%.out %.err : %.in ${EXECBIN}
@


1.14
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.13 2015-11-13 13:50:41-08 - - $
d40 3
@


1.13
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.12 2015-07-09 18:41:17-07 - - $
d6 2
a7 2
CPP       = g++ -g -O0 -Wall -Wextra -std=gnu++11
MKDEPS    = g++ -MM -std=gnu++11
@


1.12
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.11 2015-07-09 18:33:22-07 - - $
d45 1
a45 2
	${FLEX} ${FLEXSRC} 2>${LEXOUT}
	- grep -v '^  ' ${LEXOUT}
@


1.11
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.10 2015-07-09 18:32:20-07 - - $
d32 1
a32 1
TESTINS   = ${wildcard test*.in*}
@


1.10
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.9 2015-07-09 18:10:52-07 - - $
d32 1
a32 1
TESTINS   = ${wildcard test?.in}
@


1.9
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.8 2015-07-09 14:08:58-07 - - $
d33 1
a33 1
EXECTEST  = ${EXECBIN} -ly -@@@@
@


1.8
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.7 2015-07-08 19:21:19-07 - - $
a71 1

@


1.7
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.6 2015-07-08 17:45:16-07 - - $
d12 1
a12 4
#
# Definitions of list of files:
#
MODULES   = astree utils stringset emit syslib
a35 8
#
# Definitions of the compiler and compilation options:
#

#
# The first target is always ``all'', and hence the default,
# and builds the executable images
#
a37 3
#
# Build the executable image from the object files.
#
a40 3
#
# Build an object file form a C source file.
#
a43 4

#
# Build the lexer.
#
a47 3
#
# Build the parser.
#
d52 1
a52 3
#
# Check sources into an RCS subdirectory.
#
a57 3
#
# Make a listing from all of the sources
#
a63 3
#
# Clean and spotless remove generated files.
#
a72 3
#
# Build the dependencies file using the C preprocessor
#
a80 4
#
# Test
#

a88 3
#
# Everything
#
@


1.6
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.5 2015-07-08 14:39:44-07 - - $
d6 2
d9 2
d20 6
a25 5
CLGEN     = yylex.cpp
HYGEN     = yyparse.h
CYGEN     = yyparse.cpp
CGENS     = ${CLGEN} ${CYGEN}
ALLGENS   = ${HYGEN} ${CGENS}
d29 3
a31 3
LREPORT   = yylex.output
YREPORT   = yyparse.output
REPORTS   = ${LREPORT} ${YREPORT}
d37 1
a37 1
LISTSRC   = ${ALLSRC} ${DEPSFILE} ${HYGEN}
a41 2
GCC       = g++ -g -O0 -Wall -Wextra -std=gnu++11
MKDEPS    = g++ -MM -std=gnu++11
d53 1
a53 1
	${GCC} -o${EXECBIN} ${OBJECTS}
d59 1
a59 1
	${GCC} -c $<
d65 3
a67 3
${CLGEN} : ${FLEXSRC}
	flex --outfile=${CLGEN} ${FLEXSRC} 2>${LREPORT}
	- grep -v '^  ' ${LREPORT}
d72 3
a74 3
${CYGEN} ${HYGEN} : ${BISONSRC}
	bison --defines=${HYGEN} --output=${CYGEN} ${BISONSRC}
	echo -e '1,$$!cpp -fpreprocessed -dD\nw\nq\n' | ex ${HYGEN}
@


1.5
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.4 2015-07-08 14:06:20-07 - - $
d11 1
a11 1
MODULES   = astree emit utils auxlib stringset 
@


1.4
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.3 2015-07-08 13:31:37-07 - - $
d11 1
a11 1
MODULES   = astree emit lyutils auxlib stringset 
d14 1
a14 1
FLEXSRC   = scanner.l
d60 1
a60 1
# Build the scanner.
@


1.3
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.2 2015-07-08 13:31:14-07 - - $
d26 1
a26 2
IREPORT   = ident.output
REPORTS   = ${LREPORT} ${YREPORT} ${IREPORT}
a50 1
	ident ${OBJECTS} ${EXECBIN} >${IREPORT}
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2015-07-08 13:29:32-07 - - $
d79 2
a80 2
	checksource - ${ALLSRC}
	cpplint.py.perl ${CPPSRC}
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2015-07-08 13:24:25-07 - - $
d79 2
@
